?legend
legend("topleft",legend="WECARE Ampliseq")
legend("topleft",legend="WECARE Ampliseq", pch=1, col ="red")
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE w/o Danish to 1KGP")
text(-5.5,-1,"AFR")
text(0.5,5,"EAS")
text(0,1,"AMR/SAS")
text(5,-6,"EUR")
legend("topleft",legend="WECARE Ampliseq", pch=1, col ="red", bty="n")
# Clean-up
rm(x,y,z,potential_outliers)
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE w/o Danish to 1KGP\nusing only 118 variants")
# Make colouts for the plot
x <- cbind(kgen_pcs.mx[, 1:2],kgp_pops_colours)
y <- cbind(wecare_pcs.mx[, 1:2],"red")
z <- rbind(x,y)
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE w/o Danish to 1KGP\nusing only 118 variants")
text(-5.5,-1,"AFR")
text(0.5,5,"EAS")
text(0,1,"AMR/SAS")
text(5,-6,"EUR")
legend("topleft",legend="WECARE Ampliseq", pch=1, col ="red", bty="n")
# Clean-up
rm(x,y,z)
# Chunk 1
options(width=999)
# Chunk 2
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents" # mac
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021") # mac
scripts_folder <- file.path(project_folder,"wes","s01_wes_wecare_only","scripts","s07_relatedness_and_pca")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"wes","s01_wes_wecare_only","data","s07_relatedness_and_pca")
library(bigsnpr) # for bed_autoSVD() and bed()
library(bigutilsr) # for prob_dist() and tukey_mc_up() for outlier detection
library(hexbin) # for plotting svd loadings
library(ggplot2)
library(dplyr)
NCORES <- 1
#NCORES <- nb_cores() # 2
# Chunk 3
# Location of bed file
bed_file <- file.path(data_folder,"s03_non_related","common_biallelic_autosomal_snps_in_HWE_norel.bed")
# Attach PLINK data to R environment
wecare.bed <- bed(bed_file) # bigsnpr::bed
# Explore wecare.bed
wecare.bed
names(wecare.bed)
#str(wecare.bed)
#attributes(wecare.bed)
#wecare.bed$bedfile
#wecare.bed$address
# Clean-up
rm(bed_file)
# Chunk 4
wecare_phenotypes.df <- wecare.bed$fam
dim(wecare_phenotypes.df)
head(wecare_phenotypes.df)
potential_outliers <- wecare_phenotypes.df$sample.ID %in% c("P6_D05", "P5_E09")
sum(potential_outliers)
#data_file <- file.path(data_folder,"s04_phenotypes_with_PCs.RData")
#load(data_file)
#dim(updated_phenotypes.df)
#rm(data_file)
# Chunk 5
# Location of bed file
bed_file <- file.path(project_folder,"b37_1kgp","kgp_b37_biallelic_snps_autosomal_common_non_related_no_outliers.bed")
# Read (=attach?) data
kgp.bed <- bed(bed_file) # bigsnpr::bed
kgp.bed
# Clean-up
rm(bed_file)
data_file <- file.path(project_folder,"b37_1kgp","igsr-1000_genomes_phase_3_release.tsv")
kgp_pop.df <- read.table(data_file, header=T, sep = "\t")
dim(kgp_pop.df)
rownames(kgp_pop.df) <- kgp_pop.df$Sample.name
kgp_pops <- kgp_pop.df[kgp_samples,"Superpopulation.code"]
table(kgp_pops, useNA = "always")
kgp_pops_colours <- kgp_pops
kgp_samples <- kgp.bed$fam$sample.ID
data_file <- file.path(project_folder,"b37_1kgp","igsr-1000_genomes_phase_3_release.tsv")
kgp_pop.df <- read.table(data_file, header=T, sep = "\t")
dim(kgp_pop.df)
rownames(kgp_pop.df) <- kgp_pop.df$Sample.name
kgp_pops <- kgp_pop.df[kgp_samples,"Superpopulation.code"]
table(kgp_pops, useNA = "always")
kgp_pops_colours <- kgp_pops
"blue" -> kgp_pops_colours[kgp_pops == "EUR"]
"darkgrey" -> kgp_pops_colours[kgp_pops == "AFR"]
"pink" -> kgp_pops_colours[kgp_pops == "EAS"]
"yellow" -> kgp_pops_colours[kgp_pops == "SAS"]
"orange" -> kgp_pops_colours[kgp_pops == "AMR"]
table(kgp_pops_colours, useNA = "always")
rm(data_file)
wecare_map.df <- wecare.bed$map
dim(wecare_map.df)
kgp_map.df <- kgp.bed$map
dim(kgp_map.df)
x <- inner_join(kgp_map.df, wecare_map.df, by=c("chromosome","physical.pos"))
y <- inner_join(kgp_map.df, wecare_map.df, by=c("chromosome","physical.pos","allele1","allele2"))
dim(x)
head(x)
dim(y)
head(y)
rm(x,y)
# Calculate the "projection"
proj <- bed_projectPCA(kgp.bed, wecare.bed, ncores = NCORES)
# Explore proj ...
str(proj)
# Get 1KGP PCs
kgen_pcs.mx <- predict(proj$obj.svd.ref)
dim(kgen_pcs.mx)
# Get wecare projections
wecare_pcs.mx <- proj$OADP_proj
dim(wecare_pcs.mx)
# Make colouts for the plot
x <- cbind(kgen_pcs.mx[, 1:2],kgp_pops_colours)
y <- cbind(wecare_pcs.mx[, 1:2],"red")
"blue" -> y[potential_outliers,3]
"brown" -> y[potential_outliers,3]
z <- rbind(x,y)
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE w/o Danish to 1KGP\nusing 13,487 variants")
text(46,-9,"AFR")
text(-24.5,-35,"EAS")
#text(-20,0,"AMR")
#text(-11,8,"SAS")
text(-17,1,"AMR/SAS")
text(-10.5,30,"EUR")
text(-15,30,"EUR")
text(-17,30,"EUR")
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE w/o Danish to 1KGP\nusing 13,487 variants")
text(46,-9,"AFR")
text(-24.5,-35,"EAS")
#text(-20,0,"AMR")
#text(-11,8,"SAS")
text(-17,1,"AMR/SAS")
text(-17,30,"EUR")
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE w/o Danish to 1KGP\nusing 13,487 variants")
text(46,-9,"AFR")
text(-24.5,-35,"EAS")
#text(-20,0,"AMR")
#text(-11,8,"SAS")
text(-17,1,"AMR/SAS")
text(-18,30,"EUR")
# Clean-up
rm(x,y,z,potential_outliers)
legend("topright",legend="WECARE Ampliseq", pch=1, col ="red", bty="n")
library(bigsnpr) # for bed_autoSVD() and bed()
?bigsnpr
# Chunk 1
options(width=999)
# Chunk 2
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents" # mac
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021") # mac
scripts_folder <- file.path(project_folder,"wes","s01_wes_wecare_only","scripts","s07_relatedness_and_pca")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"wes","s01_wes_wecare_only","data","s07_relatedness_and_pca")
library(bigsnpr) # for bed_autoSVD() and bed()
library(bigutilsr) # for prob_dist() and tukey_mc_up() for outlier detection
library(hexbin) # for plotting svd loadings
library(ggplot2)
library(dplyr)
NCORES <- 1
#NCORES <- nb_cores() # 2
# Chunk 3
# Location of bed file
bed_file <- file.path(data_folder,"s03_non_related","common_biallelic_autosomal_snps_in_HWE_norel.bed")
# Attach PLINK data to R environment
wecare.bed <- bed(bed_file) # bigsnpr::bed
# Explore wecare.bed
wecare.bed
names(wecare.bed)
#str(wecare.bed)
#attributes(wecare.bed)
#wecare.bed$bedfile
#wecare.bed$address
# Clean-up
rm(bed_file)
# Chunk 4
wecare_phenotypes.df <- wecare.bed$fam
dim(wecare_phenotypes.df)
head(wecare_phenotypes.df)
potential_outliers <- wecare_phenotypes.df$sample.ID %in% c("P6_D05", "P5_E09")
sum(potential_outliers)
#data_file <- file.path(data_folder,"s04_phenotypes_with_PCs.RData")
#load(data_file)
#dim(updated_phenotypes.df)
#rm(data_file)
# Chunk 5
# Location of bed file
bed_file <- file.path(project_folder,"b37_1kgp","kgp_b37_biallelic_snps_autosomal_common_non_related_no_outliers.bed")
# Read (=attach?) data
kgp.bed <- bed(bed_file) # bigsnpr::bed
kgp.bed
str(kgp.bed)
kgp_samples <- kgp.bed$fam$sample.ID
# Clean-up
rm(bed_file)
# Chunk 6
data_file <- file.path(project_folder,"b37_1kgp","igsr-1000_genomes_phase_3_release.tsv")
kgp_pop.df <- read.table(data_file, header=T, sep = "\t")
dim(kgp_pop.df)
rownames(kgp_pop.df) <- kgp_pop.df$Sample.name
kgp_pops <- kgp_pop.df[kgp_samples,"Superpopulation.code"]
table(kgp_pops, useNA = "always")
kgp_pops_colours <- kgp_pops
"blue" -> kgp_pops_colours[kgp_pops == "EUR"]
"darkgrey" -> kgp_pops_colours[kgp_pops == "AFR"]
"pink" -> kgp_pops_colours[kgp_pops == "EAS"]
"yellow" -> kgp_pops_colours[kgp_pops == "SAS"]
"orange" -> kgp_pops_colours[kgp_pops == "AMR"]
table(kgp_pops_colours, useNA = "always")
rm(data_file)
# Chunk 7
wecare_map.df <- wecare.bed$map
dim(wecare_map.df)
kgp_map.df <- kgp.bed$map
dim(kgp_map.df)
x <- inner_join(kgp_map.df, wecare_map.df, by=c("chromosome","physical.pos"))
y <- inner_join(kgp_map.df, wecare_map.df, by=c("chromosome","physical.pos","allele1","allele2"))
dim(x)
head(x)
dim(y)
head(y)
rm(x,y)
# Chunk 8
# Calculate the "projection"
proj <- bed_projectPCA(kgp.bed, wecare.bed, ncores = NCORES)
# Explore proj ...
str(proj)
# proj$obj.svd.ref # big_SVD object computed from reference data.
# Chunk 9
# Get 1KGP PCs
kgen_pcs.mx <- predict(proj$obj.svd.ref)
dim(kgen_pcs.mx)
# Get wecare projections
wecare_pcs.mx <- proj$OADP_proj
dim(wecare_pcs.mx)
# OADP projection of new data into space of reference PCA
# proj$obj.svd.ref # big_SVD object computed from reference data.
# Make colouts for the plot
x <- cbind(kgen_pcs.mx[, 1:2],kgp_pops_colours)
y <- cbind(wecare_pcs.mx[, 1:2],"red")
"brown" -> y[potential_outliers,3]
z <- rbind(x,y)
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE w/o Danish to 1KGP\nusing 13,487 variants")
text(46,-9,"AFR")
text(-24.5,-35,"EAS")
#text(-20,0,"AMR")
#text(-11,8,"SAS")
text(-17,1,"AMR/SAS")
text(-18,30,"EUR")
legend("topright",legend="WECARE WES", pch=1, col ="red", bty="n")
# Clean-up
rm(x,y,z,potential_outliers)
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents" # mac
project_folder <- file.path(base_folder,"wecare","reanalysis_2022") # mac
scripts_folder <- file.path(project_folder,"wes","s01_wes_wecare_only","scripts","s07_relatedness_and_pca")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"wes","s01_wes_wecare_only","data","s07_relatedness_and_pca")
library(bigsnpr) # for bed_autoSVD() and bed()
library(bigutilsr) # for prob_dist() and tukey_mc_up() for outlier detection
library(hexbin) # for plotting svd loadings
library(ggplot2)
library(dplyr)
NCORES <- 1
# Location of bed file
bed_file <- file.path(data_folder,"s03_non_related","common_biallelic_autosomal_snps_in_HWE_norel.bed")
# Attach PLINK data to R environment
wecare.bed <- bed(bed_file) # bigsnpr::bed
# Explore wecare.bed
wecare.bed
names(wecare.bed)
# Clean-up
rm(bed_file)
wecare_phenotypes.df <- wecare.bed$fam
dim(wecare_phenotypes.df)
head(wecare_phenotypes.df)
potential_outliers <- wecare_phenotypes.df$sample.ID %in% c("P6_D05", "P5_E09")
sum(potential_outliers)
# Location of bed file
bed_file <- file.path(project_folder,"b37_1kgp","kgp_b37_biallelic_snps_autosomal_common_non_related_no_outliers.bed")
# Read (=attach?) data
kgp.bed <- bed(bed_file) # bigsnpr::bed
kgp.bed
str(kgp.bed)
kgp_samples <- kgp.bed$fam$sample.ID
# Clean-up
rm(bed_file)
data_file <- file.path(project_folder,"b37_1kgp","igsr-1000_genomes_phase_3_release.tsv")
kgp_pop.df <- read.table(data_file, header=T, sep = "\t")
dim(kgp_pop.df)
rownames(kgp_pop.df) <- kgp_pop.df$Sample.name
kgp_pops <- kgp_pop.df[kgp_samples,"Superpopulation.code"]
table(kgp_pops, useNA = "always")
kgp_pops_colours <- kgp_pops
"blue" -> kgp_pops_colours[kgp_pops == "EUR"]
"darkgrey" -> kgp_pops_colours[kgp_pops == "AFR"]
"pink" -> kgp_pops_colours[kgp_pops == "EAS"]
"yellow" -> kgp_pops_colours[kgp_pops == "SAS"]
"orange" -> kgp_pops_colours[kgp_pops == "AMR"]
table(kgp_pops_colours, useNA = "always")
rm(data_file)
wecare_map.df <- wecare.bed$map
dim(wecare_map.df)
kgp_map.df <- kgp.bed$map
dim(kgp_map.df)
x <- inner_join(kgp_map.df, wecare_map.df, by=c("chromosome","physical.pos"))
y <- inner_join(kgp_map.df, wecare_map.df, by=c("chromosome","physical.pos","allele1","allele2"))
dim(x)
head(x)
dim(y)
head(y)
rm(x,y)
# Calculate the "projection"
proj <- bed_projectPCA(kgp.bed, wecare.bed, ncores = NCORES)
# Explore proj ...
str(proj)
# Get 1KGP PCs
kgen_pcs.mx <- predict(proj$obj.svd.ref)
dim(kgen_pcs.mx)
# Get wecare projections
wecare_pcs.mx <- proj$OADP_proj
dim(wecare_pcs.mx)
# Make colouts for the plot
x <- cbind(kgen_pcs.mx[, 1:2],kgp_pops_colours)
y <- cbind(wecare_pcs.mx[, 1:2],"red")
"brown" -> y[potential_outliers,3]
z <- rbind(x,y)
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE w/o Danish to 1KGP\nusing 13,487 variants")
text(46,-9,"AFR")
text(-24.5,-35,"EAS")
#text(-20,0,"AMR")
#text(-11,8,"SAS")
text(-17,1,"AMR/SAS")
text(-18,30,"EUR")
legend("topright",legend="WECARE WES", pch=1, col ="red", bty="n")
# Clean-up
rm(x,y,z,potential_outliers)
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE to 1KGP\nusing 13,487 variants")
# Chunk 1
options(width=999)
# Chunk 2
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents" # mac
project_folder <- file.path(base_folder,"wecare","reanalysis_2022") # mac
scripts_folder <- file.path(project_folder,"wes","s01_wes_wecare_only","scripts","s07_relatedness_and_pca")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"wes","s01_wes_wecare_only","data","s07_relatedness_and_pca")
library(bigsnpr) # for bed_autoSVD() and bed()
library(bigutilsr) # for prob_dist() and tukey_mc_up() for outlier detection
library(hexbin) # for plotting svd loadings
library(ggplot2)
library(dplyr)
NCORES <- 1
#NCORES <- nb_cores() # 2
# Chunk 3
# Location of bed file
bed_file <- file.path(data_folder,"s03_non_related","common_biallelic_autosomal_snps_in_HWE_norel.bed")
# Attach PLINK data to R environment
wecare.bed <- bed(bed_file) # bigsnpr::bed
# Explore wecare.bed
wecare.bed
names(wecare.bed)
#str(wecare.bed)
#attributes(wecare.bed)
#wecare.bed$bedfile
#wecare.bed$address
# Clean-up
rm(bed_file)
# Chunk 4
wecare_phenotypes.df <- wecare.bed$fam
dim(wecare_phenotypes.df)
head(wecare_phenotypes.df)
potential_outliers <- wecare_phenotypes.df$sample.ID %in% c("P6_D05", "P5_E09")
sum(potential_outliers)
#data_file <- file.path(data_folder,"s04_phenotypes_with_PCs.RData")
#load(data_file)
#dim(updated_phenotypes.df)
#rm(data_file)
# Chunk 5
# Location of bed file
bed_file <- file.path(project_folder,"b37_1kgp","kgp_b37_biallelic_snps_autosomal_common_non_related_no_outliers.bed")
# Read (=attach?) data
kgp.bed <- bed(bed_file) # bigsnpr::bed
kgp.bed
str(kgp.bed)
kgp_samples <- kgp.bed$fam$sample.ID
# Clean-up
rm(bed_file)
# Chunk 6
data_file <- file.path(project_folder,"b37_1kgp","igsr-1000_genomes_phase_3_release.tsv")
kgp_pop.df <- read.table(data_file, header=T, sep = "\t")
dim(kgp_pop.df)
rownames(kgp_pop.df) <- kgp_pop.df$Sample.name
kgp_pops <- kgp_pop.df[kgp_samples,"Superpopulation.code"]
table(kgp_pops, useNA = "always")
kgp_pops_colours <- kgp_pops
"blue" -> kgp_pops_colours[kgp_pops == "EUR"]
"darkgrey" -> kgp_pops_colours[kgp_pops == "AFR"]
"pink" -> kgp_pops_colours[kgp_pops == "EAS"]
"yellow" -> kgp_pops_colours[kgp_pops == "SAS"]
"orange" -> kgp_pops_colours[kgp_pops == "AMR"]
table(kgp_pops_colours, useNA = "always")
rm(data_file)
# Chunk 7
wecare_map.df <- wecare.bed$map
dim(wecare_map.df)
kgp_map.df <- kgp.bed$map
dim(kgp_map.df)
x <- inner_join(kgp_map.df, wecare_map.df, by=c("chromosome","physical.pos"))
y <- inner_join(kgp_map.df, wecare_map.df, by=c("chromosome","physical.pos","allele1","allele2"))
dim(x)
head(x)
dim(y)
head(y)
rm(x,y)
# Chunk 8
# Calculate the "projection"
proj <- bed_projectPCA(kgp.bed, wecare.bed, ncores = NCORES)
# Explore proj ...
str(proj)
# proj$obj.svd.ref # big_SVD object computed from reference data.
# Get 1KGP PCs
kgen_pcs.mx <- predict(proj$obj.svd.ref)
dim(kgen_pcs.mx)
# Get wecare projections
wecare_pcs.mx <- proj$OADP_proj
dim(wecare_pcs.mx)
# Make colouts for the plot
x <- cbind(kgen_pcs.mx[, 1:2],kgp_pops_colours)
y <- cbind(wecare_pcs.mx[, 1:2],"red")
"brown" -> y[potential_outliers,3]
z <- rbind(x,y)
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE to 1KGP\nusing 13,487 variants")
text(46,-9,"AFR")
text(-24.5,-35,"EAS")
#text(-20,0,"AMR")
#text(-11,8,"SAS")
text(-17,1,"AMR/SAS")
text(-18,30,"EUR")
legend("topright",legend="WECARE WES", pch=1, col ="red", bty="n")
# Plot 2 top PC-s
plot(z[,1:2],col=z[,3], xlab="PC1", ylab="PC2",
main="Projecting WECARE WES to 1KGP\nusing 13,487 variants")
text(46,-9,"AFR")
text(-24.5,-35,"EAS")
#text(-20,0,"AMR")
#text(-11,8,"SAS")
text(-17,1,"AMR/SAS")
text(-18,30,"EUR")
legend("topright",legend="WECARE WES", pch=1, col ="red", bty="n")
# Clean-up
rm(x,y,z,potential_outliers)
