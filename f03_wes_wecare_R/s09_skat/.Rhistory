# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# Libraries and functions
library(dplyr)
source(file.path(project_folder,"scripts","f00_functions","f01_qqunif_plot.R"))
load(file.path(project_folder,"data","s07_relatedness_and_pca","s06_update_main_dataset.RData"))
# update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
data_folder <- file.path(project_folder,"data","s08_crude_counts")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = T)
table(as.vector(phenotypes.df$cc), useNA = T)
table(phenotypes.df$cc, useNA = "always")
View(phenotypes.df)
keep <- phenotypes.df$sample.ID != "P1_F10"
sum(keep)
genotypes.mx <- genotypes.mx[,keep]
phenotypes.df <- phenotypes.df[keep,]
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# Libraries and functions
library(dplyr)
source(file.path(project_folder,"scripts","f00_functions","f01_qqunif_plot.R"))
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC8 genes
load(file.path(project_folder,"data","s07_relatedness_and_pca","s06_update_main_dataset.RData"))
# update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
data_folder <- file.path(project_folder,"data","s08_crude_counts")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
keep <- phenotypes.df$sample.ID != "P1_F10"
sum(keep)
genotypes.mx <- genotypes.mx[,keep]
phenotypes.df <- phenotypes.df[keep,]
rm(keep)
# Function to detect uniform numeric vector
uniformity_check.udf <- function(x){
if (all(is.na(x))){"All_NA"}
else if (min(x,na.rm=T)==max(x,na.rm=T)){"Uniform"}
else {"Non-Uniform"}}
uniformity_check <- apply(genotypes.mx,1,uniformity_check.udf)
table(uniformity_check, useNA = "always")
# Update matrices and data-frame(s)
non_uniform_sites <- uniformity_check == "Non-Uniform"
genotypes.mx <- genotypes.mx[non_uniform_sites,]
variants.df <- variants.df[non_uniform_sites,]
# Check result
dim(genotypes.mx)
dim(variants.df)
table(phenotypes.df$cc, useNA = "always")
rm(keep)
# Clean-up
rm(uniformity_check.udf, uniformity_check, non_uniform_sites)
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
load(file.path(data_folder,"s00_remove_P1_F10.RData"))
# update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$cc)
sum(is.na(phenotypes.df$cc))
cases <- phenotypes.df$cc == 1
controls <- phenotypes.df$cc == 0
col_names <- c("id",
"total_ac","total_an","total_af",
"controls_ac","controls_an","controls_af",
"cases_ac","cases_an","cases_af",
"excess_group",
"crude_fisher_p","crude_counts_or",
"or_lo_ci","or_hi_ci")
variants_crude_counts.mx <- matrix(nrow=0,ncol=length(col_names))
colnames(variants_crude_counts.mx) <- col_names
rm(col_names)
# For each variant
for(var in 1:nrow(variants.df)){
# for testing
# var <- 1
# Get variant ID
id <- variants.df[var,"ID"]
# Get vector of genotypes
genotypes <- genotypes.mx[var,]
# Calculate crude counts
total_ac <- sum(genotypes, na.rm=T)
total_an <- 2*sum(!is.na(genotypes))
total_af <- total_ac / total_an
controls_ac <- sum(genotypes[controls], na.rm=T)
controls_an <- 2*sum(!is.na(genotypes[controls]))
controls_af <- controls_ac / controls_an
cases_ac <- sum(genotypes[cases], na.rm=T)
cases_an <- 2*sum(!is.na(genotypes[cases]))
cases_af <- cases_ac / cases_an
# Determine the excess group
if(cases_af > controls_af) "cases" -> excess_group
if(cases_af < controls_af) "controls" -> excess_group
if(cases_af == controls_af) "none" -> excess_group
# Calculate Fisher test
fisher_matrix <- matrix(c(cases_ac, cases_an - cases_ac,
controls_ac, controls_an -controls_ac),
nrow=2, byrow=T)
fisher_test <- fisher.test(fisher_matrix, conf.int=T)
crude_fisher_p <- fisher_test$p.value
crude_counts_or <- fisher_test$estimate
crude_counts_or_ci <- fisher_test$conf.int
# Compile and record the result
result <- c(id,
total_ac,total_an,total_af,
controls_ac,controls_an,controls_af,
cases_ac,cases_an,cases_af,
excess_group,
crude_fisher_p, crude_counts_or, crude_counts_or_ci)
variants_crude_counts.mx <- rbind(variants_crude_counts.mx,
result)
# Clean-up (to avoid chances of counts carry-over between records)
rm(id,genotypes,
total_ac,total_an,total_af,
controls_ac,controls_an,controls_af,
cases_ac,cases_an,cases_af,
excess_group,
fisher_matrix, fisher_test,
crude_fisher_p, crude_counts_or, crude_counts_or_ci,
result)
} # Next variant
# Check result
dim(variants_crude_counts.mx)
head(variants_crude_counts.mx)
# Clean-up
rm(var, cases, controls)
# Clean up
rm(list=ls())
graphics.off()
# Memory
gc()
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries
library(dplyr)
load(file.path(data_folder,"s01_crude_counts_per_variant.RData"))
# Update working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
data_folder <- file.path(project_folder,"data","s08_crude_counts")
bc11_genes <- scan(file.path(data_folder,"bc11_genes.txt"),what="character")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
# Check list of genes
bc11_genes
bc11_variants.df <- variants.df[variants.df$vep_SYMBOL %in% bc11_genes,]
dim(bc11_variants.df)
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries
library(dplyr)
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# Libraries
library(dplyr)
load(file.path(data_folder,"s02_select_bc11_pv.RData"))
# Update working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
table(phenotypes.df$cc, useNA = "always")
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# Libraries
library(dplyr)
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# Libraries
library(dplyr)
load(file.path(data_folder,"s03_allele_counts_bc11.RData"))
# Update foilders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
table(phenotypes.df$cc, useNA = "always")
# Chunk 1
options(width=999)
# Chunk 2
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# Libraries
library(dplyr)
# Chunk 3
load(file.path(data_folder,"s03_allele_counts_bc11.RData"))
# Update foilders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# Chunk 4
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
dim(bc11_variants.df)
dim(bc11_fiv.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
# Check list of genes
bc11_genes
# Chunk 5
genotypes_bc11.mx <- genotypes.mx[bc11_fiv.df$ID,]
dim(genotypes_bc11.mx)
carriers_ids.udf <- function(x){paste(names(x)[which(x>0)], collapse=",")}
apply(genotypes_bc11.mx,1,carriers_ids.udf)
carriers_counts.udf <- function(x){sum(x>0, na.rm=T)}
carriers_counts <- apply(genotypes_bc11.mx,1,carriers_counts.udf)
carriers_counts
sum(carriers_counts)
sum(carriers_counts)/ncol(genotypes.mx)
rm(carriers_ids.udf, carriers_counts.udf, carriers_counts)
# Chunk 6
table(phenotypes.df$cc)
controls <- phenotypes.df$cc == 0
cases <- phenotypes.df$cc == 1
bc11_fiv <- bc11_fiv.df$ID
# Chunk 7
gt_fiv_controls.mx <- genotypes.mx[bc11_fiv,controls]
dim(gt_fiv_controls.mx)
controls_carriers <- apply(gt_fiv_controls.mx,2,sum,na.rm=T)
table(controls_carriers,useNA = "always")
controls_carriers_count <- sum(controls_carriers>0)
controls_total_count <- sum(controls) # sum(), NOT length() !
controls_carriers_fraction <- controls_carriers_count / controls_total_count
rm(gt_fiv_controls.mx,controls_carriers,controls)
# Chunk 8
gt_fiv_cases.mx <- genotypes.mx[bc11_fiv,cases]
dim(gt_fiv_cases.mx)
cases_carriers <- apply(gt_fiv_cases.mx,2,sum,na.rm=T)
table(cases_carriers,useNA = "always")
cases_carriers_count <- sum(cases_carriers>0)
cases_total_count <- sum(cases) # sum(), NOT length !
cases_carriers_fraction <- cases_carriers_count / cases_total_count
rm(gt_fiv_cases.mx,cases_carriers,bc11_fiv,cases)
# Chunk 9
fisher_matrix <- matrix(c(cases_carriers_count, cases_total_count - cases_carriers_count,
controls_carriers_count, controls_total_count - controls_carriers_count),
nrow=2, byrow=T)
colnames(fisher_matrix) <- c("Alt","Ref")
rownames(fisher_matrix) <- c("Cases","Controls")
fisher_matrix
ft <- fisher.test(fisher_matrix, conf.int=T)
ft
rm(fisher_matrix)
# Chunk 10
pt <- prop.test(c(controls_carriers_count,cases_carriers_count),
c(controls_total_count,cases_total_count))
pt
# Prepare data for plot
proportions_of_carriers <- c(controls_carriers_fraction,cases_carriers_fraction)
names(proportions_of_carriers) <- c("UBC","CBC")
cc_counts <- table(phenotypes.df$cc)
# Barplot (keep mid-positions of bars)
mp <- barplot(proportions_of_carriers, ylim=c(0,max(proportions_of_carriers)+0.015),
main=paste("BC11 Proportion of PV carriers: WES WECARE-only\n",
cc_counts[1],"controls vs ",cc_counts[2],
" cases\nCrude counts Fisher p=",round(ft$p.value,3)),
ylab="Proportion of PV carriers")
# Add labels to plot
text(mp,proportions_of_carriers+0.007,round(proportions_of_carriers,3))
# Clean-up
rm(controls_carriers_count, controls_total_count, controls_carriers_fraction,
cases_carriers_count, cases_total_count, cases_carriers_fraction,
proportions_of_carriers, mp, cc_counts,
pt,ft)
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s09_skat")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s09_skat")
#dir.create(data_folder)
# Libraries
library(SKAT)
library(dplyr)
load(file.path(project_folder,"data","s08_crude_counts","s03_crude_counts_bc11.RData"))
project_folder
load(file.path(project_folder,"data","s08_crude_counts","s03_allele_counts_bc11.RData"))
# Update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s01_wes_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s09_skat")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s09_skat")
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
table(phenotypes.df$cc, useNA = "always")
# Check consistency of rownames and colnames
sum(colnames(genotypes.mx) != phenotypes.df$sample.ID)
sum(rownames(genotypes.mx) != variants.df$ID)
dim(bc11_variants.df)
dim(bc11_fiv.df)
Y <- phenotypes.df$cc
length(Y)
sum(is.na(Y)) # 0
G <- t(genotypes.mx[bc11_fiv.df$ID,])
dim(G)
sum(is.na(G)) # 7
# Do NOT impute missed genotypes (they are handled by SKAT)
sum(is.na(G))/(ncol(G)*nrow(G)) # <1%
E <- as.matrix(phenotypes.df[,c("pc1","pc2")])
dim(E)
sum(is.na(E)) # 0
M <- as.matrix(phenotypes.df[,c("age_dx", "rstime")])
sum(is.na(M)) # 0
# Hormonal treatment
table(phenotypes.df$hormone, useNA = "always")
hormone <- phenotypes.df$hormone
# Impute treatment for one missed case
hormone[is.na(hormone)] <- mean(hormone,na.rm=T)
table(hormone, useNA = "always")
# Cytotoxic chemotherapy
table(phenotypes.df$chemo_cat, useNA = "always")
chemo <- phenotypes.df$chemo_cat != "no"
table(chemo, useNA = "always")
# Breast irradiation
table(phenotypes.df$br_xray, useNA = "always")
xray <- phenotypes.df$br_xray
table(xray, useNA = "always")
table(phenotypes.df$num_preg, useNA = "always")
num_preg <- as.integer(phenotypes.df$num_preg)
table(num_preg)
C <- cbind(chemo, hormone, xray, num_preg)
sum(is.na(C)) # 0
# Clean-up
rm(chemo, hormone, xray, num_preg)
skat_null <- SKAT_Null_Model(Y ~ C + E + M, out_type="D", n.Resampling = 10000)
burden_test <- SKATBinary(G, skat_null, method="Burden", method.bin = "ER")
burden_test$p.value
burden_test$MAC
names(burden_test)
# Clean-up
rm(Y, G, E, C, M, skat_null)
