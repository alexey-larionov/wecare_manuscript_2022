dim(full_gt.mx)
dim(full_ad.mx)
dim(phenotypes_with_danish.df)
# Explore wecare phenotypes data
colnames(phenotypes_with_danish.df)
dim(phenotypes_with_danish.df)
# Make empty data frame for NFE phenotypes
# with the same as the wecare phenotypes data frame
nfe_phenotypes.df <- as.data.frame(matrix(rep(NA,198*40), nrow=198))
colnames(nfe_phenotypes.df) <- colnames(phenotypes_with_danish.df)
# Check where the columns with NFE end in genotypes matrix
colnames(full_gt.mx)[198:199]
# Get wes-id-s for NFE samples
nfe_ids <- colnames(full_gt.mx)[1:198]
# Populate columns in the data frame for NFE phenotypes
nfe_phenotypes.df$wes_id <- nfe_ids
"pass" -> nfe_phenotypes.df$filter
-1 -> nfe_phenotypes.df$cc
# Combine NFE and WECARE phenotypes data
full_phenotypes.df <- rbind(nfe_phenotypes.df, phenotypes_with_danish.df)
rownames(full_phenotypes.df) <- full_phenotypes.df$wes_id
# Explore the combined phenotypes data frame
dim(full_phenotypes.df)
full_phenotypes.df[196:210,1:5]
full_phenotypes.df %>%
group_by(cc) %>%
summarise(count=n()) %>%
arrange(desc(count))
full_phenotypes.df %>%
select(wes_id,gwas_id,filter,cc) %>%
filter(is.na(cc))
full_phenotypes.df %>%
group_by(filter) %>%
summarise(count=n()) %>%
arrange(desc(count))
# Clean-up
rm(nfe_phenotypes.df, phenotypes_with_danish.df, nfe_ids)
# Function to calculate call rate
call_rate.udf <- function(x){sum(!is.na(x))/length(x)}
# Call rates in all genotypes
call_rates <- apply(full_gt.mx,2,call_rate.udf)
plot(call_rates, main="WECARE and NFE\nbefore sample QC filtering",
ylab="Call rate per sample", xlab="Sample No")
abline(h=0.95, lty=2, col="red")
abline(v=198.5, lty=2, col="red")
# Call rates in all genotypes
call_rates <- apply(full_gt.mx,1,call_rate.udf)
hist(call_rates)
var_call_rates_wecare <- apply(full_gt.mx[199:710],1,call_rate.udf)
var_call_rates_nfe <- apply(full_gt.mx[1:198,],1,call_rate.udf)
var_call_rates_wecare <- apply(full_gt.mx[199:710,],1,call_rate.udf)
710-198
type <- c(rep("nfe",198),rep("wecare",512))
length(type)
# Call rates in all genotypes
var_call_rates <- apply(full_gt.mx,1,call_rate.udf)
library(ggplot2)
data.df <- data.frtame(var_call_rates, type)
data.df <- data.frame(var_call_rates, type)
data.df <- data.frame(nfe=var_call_rates_nfe, wecare=var_call_rates_wecare)
var_call_rates_nfe <- apply(full_gt.mx[,1:198],1,call_rate.udf)
var_call_rates_wecare <- apply(full_gt.mx[,199:710],1,call_rate.udf)
type <- c(rep("nfe",198),rep("wecare",512))
data.df <- data.frame(nfe=var_call_rates_nfe, wecare=var_call_rates_wecare)
data <- melt(data.df)
library(reshape2)
data <- melt(data.df)
head(data)
ggplot(data,aes(x=value, fill=variable)) +
geom_density(alpha=0.25)
hist(var_call_rates_nfe)
hist(var_call_rates_wecare)
?hist
hist(var_call_rates_nfe, freq=F)
hist(var_call_rates_wecare, freq=F)
hist(var_call_rates_nfe, col="red", alpha=0.25) # freq=F
hist(var_call_rates_wecare, col="blue", alpha=0.25, add=T) # freq=F
hist(var_call_rates_nfe, col="red", alpha=25) # freq=F
hist(var_call_rates_wecare, col="blue", alpha=25, add=T) # freq=F
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.25)
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.5)
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.5) +
labs(x = "Variant call rate")
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.5, y=..density..) +
labs(x = "Variant call rate")
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.5, aes(y=..density..)) +
labs(x = "Variant call rate")
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.5) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = NA)
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.5) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = NULL)
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.5) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "")
ggplot(data,aes(x=value, fill=variable)) +
geom_histogram(alpha=0.5) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
melted_data.df <- c("call_rate","group")
ggplot(data,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
melted_data.df <- c("call_rate","group")
ggplot(data,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
melted_data.df <- melt(data.df)
melted_data.df <- c("call_rate","group")
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
head(melted_data.df)
melted_data.df <- melt(data.df)
melted_data.df <- c("call_rate","group")
head(melted_data.df)
melted_data.df <- melt(data.df)
colnames(melted_data.df) <- c("call_rate","group")
head(melted_data.df)
melted_data.df <- melt(data.df)
colnames(melted_data.df) <- c("call_rate","group")
head(melted_data.df)
colnames(melted_data.df) <- c("group","call_rate")
head(melted_data.df)
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=50) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=25) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=20) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=15) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
# Clean-up
rm(var_call_rates_nfe, var_call_rates_wecare, data.df, melted_data.df)
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=15) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate",
colour = "X")
# Memory
gc()
# Chunk 1
options(width=999)
# Chunk 2
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s04_select_samples")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s04_select_samples")
# Libraries
library(dplyr)
library(ggplot2)
library(reshape2)
# Chunk 3
load(file.path(data_folder,"s01_add_phenotypes.RData"))
# Update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s04_select_samples")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s04_select_samples")
# Chunk 4
ls()
dim(full_variants.df)
dim(full_dp.mx)
dim(full_gq.mx)
dim(full_gt.mx)
dim(full_ad.mx)
dim(phenotypes_with_danish.df)
# Chunk 5
# Explore wecare phenotypes data
colnames(phenotypes_with_danish.df)
dim(phenotypes_with_danish.df)
# Make empty data frame for NFE phenotypes
# with the same as the wecare phenotypes data frame
nfe_phenotypes.df <- as.data.frame(matrix(rep(NA,198*40), nrow=198))
colnames(nfe_phenotypes.df) <- colnames(phenotypes_with_danish.df)
# Check where the columns with NFE end in genotypes matrix
colnames(full_gt.mx)[198:199]
# Get wes-id-s for NFE samples
nfe_ids <- colnames(full_gt.mx)[1:198]
# Populate columns in the data frame for NFE phenotypes
nfe_phenotypes.df$wes_id <- nfe_ids
"pass" -> nfe_phenotypes.df$filter
-1 -> nfe_phenotypes.df$cc
# Combine NFE and WECARE phenotypes data
full_phenotypes.df <- rbind(nfe_phenotypes.df, phenotypes_with_danish.df)
rownames(full_phenotypes.df) <- full_phenotypes.df$wes_id
# Explore the combined phenotypes data frame
dim(full_phenotypes.df)
full_phenotypes.df[196:210,1:5]
full_phenotypes.df %>%
group_by(cc) %>%
summarise(count=n()) %>%
arrange(desc(count))
full_phenotypes.df %>%
select(wes_id,gwas_id,filter,cc) %>%
filter(is.na(cc))
full_phenotypes.df %>%
group_by(filter) %>%
summarise(count=n()) %>%
arrange(desc(count))
# Clean-up
rm(nfe_phenotypes.df, phenotypes_with_danish.df, nfe_ids)
# Chunk 6
# Function to calculate call rate
call_rate.udf <- function(x){sum(!is.na(x))/length(x)}
# Sample call rates
call_rates <- apply(full_gt.mx,2,call_rate.udf)
plot(call_rates, main="WECARE and NFE\nbefore sample QC filtering",
ylab="Call rate per sample", xlab="Sample No")
abline(h=0.95, lty=2, col="red")
abline(v=198.5, lty=2, col="red")
rm(call_rates)
# Call rates in all genotypes
var_call_rates_nfe <- apply(full_gt.mx[,1:198],1,call_rate.udf)
var_call_rates_wecare <- apply(full_gt.mx[,199:710],1,call_rate.udf)
data.df <- data.frame(nfe=var_call_rates_nfe, wecare=var_call_rates_wecare)
melted_data.df <- melt(data.df)
colnames(melted_data.df) <- c("group","call_rate")
head(melted_data.df)
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=15, position="identity") +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate")
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=15, position="identity", aes(y=..density..)) +
labs(title="WECARE and NFE before sample QC filtering",
x = "Variant call rate", y ="Density")
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=15, position="identity", aes(y=..density..)) +
labs(title="WECARE and NFE",
suntitle="before sample QC filtering",
x = "Variant call rate", y ="Density")
ggplot(melted_data.df,aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=15, position="identity", aes(y=..density..)) +
labs(title="WECARE and NFE",
subtitle="before sample QC filtering",
x = "Variant call rate", y ="Density")
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s05_update_and_cleaning")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s05_update_and_cleaning")
load(file.path(data_folder,"s01_update_genotypes.RData"))
# Update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s05_update_and_cleaning")
data_folder <- file.path(project_folder,"data","s05_update_and_cleaning")
ls ()
# Check objects dimentions
dim(variants.df)
dim(phenotypes.df)
dim(genotypes.mx)
dim(dp.mx)
dim(gq.mx)
dim(alt_fraction.mx)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
sum(phenotypes.df$wes_id != colnames(gq.mx))
sum(phenotypes.df$wes_id != colnames(dp.mx))
sum(phenotypes.df$wes_id != colnames(alt_fraction.mx))
sum(variants.df$ID != rownames(gq.mx))
sum(variants.df$ID != rownames(dp.mx))
sum(variants.df$ID != rownames(alt_fraction.mx))
colnames(variants.df)
selected_fields <- c("CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "AC", "AN", "AF", "DP",
"DS", "MAF", "HWE", "ALLELEID", "CLNDN", "CLNDNINCL", "CLNDISDB",  "CLNDISDBINCL",
"CLNHGVS", "CLNREVSTAT", "CLNSIG", "CLNSIGCONF", "CLNSIGINCL",  "CLNVC",
"CLNVCSO", "CLNVI", "DBVARID", "GENEINFO", "MC", "ORIGIN", "RS", "vep_Allele",
"vep_Consequence", "vep_IMPACT", "vep_SYMBOL", "vep_Gene", "vep_Feature_type", "vep_Feature",
"vep_BIOTYPE", "vep_EXON", "vep_INTRON", "vep_HGVSc", "vep_HGVSp", "vep_cDNA_position",
"vep_CDS_position", "vep_Protein_position", "vep_Amino_acids",  "vep_Codons",
"vep_Existing_variation", "vep_DISTANCE", "vep_STRAND", "vep_FLAGS", "vep_VARIANT_CLASS",
"vep_SYMBOL_SOURCE", "vep_HGNC_ID", "vep_CANONICAL",
"vep_CCDS", "vep_ENSP", "vep_SWISSPROT", "vep_TREMBL", "vep_UNIPARC", "vep_GENE_PHENO",
"vep_NEAREST", "vep_SIFT", "vep_PolyPhen", "vep_DOMAINS", "vep_miRNA", "vep_HGVS_OFFSET",
"vep_AF", "vep_AFR_AF", "vep_AMR_AF", "vep_EAS_AF", "vep_EUR_AF", "vep_SAS_AF",
"vep_AA_AF", "vep_EA_AF", "vep_gnomAD_AF", "vep_gnomAD_AFR_AF", "vep_gnomAD_AMR_AF",
"vep_gnomAD_ASJ_AF", "vep_gnomAD_EAS_AF", "vep_gnomAD_FIN_AF", "vep_gnomAD_NFE_AF",
"vep_gnomAD_OTH_AF", "vep_gnomAD_SAS_AF", "vep_MAX_AF", "vep_MAX_AF_POPS", "vep_CLIN_SIG",
"vep_PHENO", "vep_PUBMED", "vep_VAR_SYNONYMS", "vep_MOTIF_NAME", "vep_MOTIF_POS",
"vep_HIGH_INF_POS", "vep_MOTIF_SCORE_CHANGE", "vep_TRANSCRIPTION_FACTORS", "vep_CADD_PHRED",
"vep_CADD_RAW")
# Keep selected fields only
dim(variants.df)
variants.df <- variants.df[,selected_fields]
dim(variants.df)
# Clean-up
rm(selected_fields)
# Check possible missing data codes
sum(is.na(variants.df))
sum(variants.df=="",na.rm=T)
sum(variants.df==".",na.rm=T)
# Count NA-s per field
num_na <- function(x){sum(is.na(x))}
x <- apply(variants.df,2,num_na)
x[x>0]
# Count dots per field
num_dots <- function(x){sum(x==".",na.rm=T)}
x <- apply(variants.df,2,num_dots)
x[x>0]
# Change dots to NA-s
NA -> variants.df[variants.df=="."]
# Check fields with all-NA
all_na <- function(x){all(is.na(x))}
x <- apply(variants.df,2,all_na)
x[x>0]
# Clean-up
rm(x,num_na,num_dots,all_na)
str(variants.df)
variants.df$AC <- as.integer(variants.df$AC)
variants.df$AF <- as.numeric(variants.df$AF)
variants.df$MAF <- as.numeric(variants.df$MAF)
variants.df$HWE <- as.numeric(variants.df$HWE)
variants.df$ALLELEID <- as.integer(variants.df$ALLELEID)
variants.df$vep_STRAND <- as.integer(variants.df$vep_STRAND)
variants.df$vep_AF <- as.numeric(variants.df$vep_AF)
variants.df$vep_AFR_AF <- as.numeric(variants.df$vep_AFR_AF)
variants.df$vep_AMR_AF <- as.numeric(variants.df$vep_AMR_AF)
variants.df$vep_EAS_AF <- as.numeric(variants.df$vep_EAS_AF)
variants.df$vep_EUR_AF <- as.numeric(variants.df$vep_EUR_AF)
variants.df$vep_SAS_AF <- as.numeric(variants.df$vep_SAS_AF)
variants.df$vep_AA_AF <- as.numeric(variants.df$vep_AA_AF)
variants.df$vep_EA_AF <- as.numeric(variants.df$vep_EA_AF)
variants.df$vep_gnomAD_AF <- as.numeric(variants.df$vep_gnomAD_AF)
variants.df$vep_gnomAD_AFR_AF <- as.numeric(variants.df$vep_gnomAD_AFR_AF)
variants.df$vep_gnomAD_AMR_AF <- as.numeric(variants.df$vep_gnomAD_AMR_AF)
variants.df$vep_gnomAD_ASJ_AF <- as.numeric(variants.df$vep_gnomAD_ASJ_AF)
variants.df$vep_gnomAD_EAS_AF <- as.numeric(variants.df$vep_gnomAD_EAS_AF)
variants.df$vep_gnomAD_FIN_AF <- as.numeric(variants.df$vep_gnomAD_FIN_AF)
variants.df$vep_gnomAD_NFE_AF <- as.numeric(variants.df$vep_gnomAD_NFE_AF)
variants.df$vep_gnomAD_OTH_AF <- as.numeric(variants.df$vep_gnomAD_OTH_AF)
variants.df$vep_gnomAD_SAS_AF <- as.numeric(variants.df$vep_gnomAD_SAS_AF)
variants.df$vep_MAX_AF <- as.numeric(variants.df$vep_MAX_AF)
variants.df$vep_CADD_PHRED <- as.numeric(variants.df$vep_CADD_PHRED)
variants.df$vep_CADD_RAW <- as.numeric(variants.df$vep_CADD_RAW)
str(variants.df)
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
dim(dp.mx)
dim(gq.mx)
dim(alt_fraction.mx)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(phenotypes.df$wes_id != colnames(gq.mx))
sum(phenotypes.df$wes_id != colnames(dp.mx))
sum(phenotypes.df$wes_id != colnames(alt_fraction.mx))
sum(variants.df$ID != rownames(genotypes.mx))
sum(variants.df$ID != rownames(gq.mx))
sum(variants.df$ID != rownames(dp.mx))
sum(variants.df$ID != rownames(alt_fraction.mx))
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s05_update_and_cleaning")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s05_update_and_cleaning")
load(file.path(data_folder,"s02_update_variants.RData"))
# Update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s05_update_and_cleaning")
data_folder <- file.path(project_folder,"data","s05_update_and_cleaning")
ls ()
# Check objects dimentions
dim(variants.df)
dim(phenotypes.df)
dim(genotypes.mx)
dim(dp.mx)
dim(gq.mx)
dim(alt_fraction.mx)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
sum(phenotypes.df$wes_id != colnames(gq.mx))
sum(phenotypes.df$wes_id != colnames(dp.mx))
sum(phenotypes.df$wes_id != colnames(alt_fraction.mx))
sum(variants.df$ID != rownames(gq.mx))
sum(variants.df$ID != rownames(dp.mx))
sum(variants.df$ID != rownames(alt_fraction.mx))
str(phenotypes.df)
phenotypes.df %>%
group_by(filter)
phenotypes.df %>%
group_by(filter) %>%
summarise(n())
phenotypes.df %>%
group_by(filter) %>%
summarise(count=n()) %>%
arrange(desc(count))
phenotypes.df %>%
group_by(registry) %>%
summarise(count=n()) %>%
arrange(desc(count))
phenotypes.df %>%
group_by(hist_cat) %>%
summarise(count=n()) %>%
arrange(desc(count))
phenotypes.df %>%
group_by(chemo_cat) %>%
summarise(count=n()) %>%
arrange(desc(count))
phenotypes.df %>%
group_by(er) %>%
summarise(count=n()) %>%
arrange(desc(count))
phenotypes.df %>%
group_by(stage) %>%
summarise(count=n()) %>%
arrange(desc(count))
phenotypes.df %>%
group_by(stage) %>%
summarise(count=n())
# Check presence of NA-s
sum(is.na(phenotypes.df))
# NA-s per field
num_na <- function(x){sum(is.na(x))}
x <- apply(phenotypes.df,2,num_na)
x[x>0]
# Other possible missed value codes
sum(phenotypes.df=="",na.rm=T)
sum(phenotypes.df==".",na.rm=T)
# Clean-up
rm(x,num_na)
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
dim(dp.mx)
dim(gq.mx)
dim(alt_fraction.mx)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(phenotypes.df$wes_id != colnames(gq.mx))
sum(phenotypes.df$wes_id != colnames(dp.mx))
sum(phenotypes.df$wes_id != colnames(alt_fraction.mx))
sum(variants.df$ID != rownames(genotypes.mx))
sum(variants.df$ID != rownames(gq.mx))
sum(variants.df$ID != rownames(dp.mx))
sum(variants.df$ID != rownames(alt_fraction.mx))
