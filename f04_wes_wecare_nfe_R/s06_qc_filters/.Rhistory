# Function to detect uniform numeric vector
uniformity_check.udf <- function(x){
if (all(is.na(x))){"All_NA"}
else if (min(x,na.rm=T)==max(x,na.rm=T)){"Uniform"}
else {"Non-Uniform"}}
uniformity_check <- apply(genotypes.mx,1,uniformity_check.udf)
summary(as.factor(uniformity_check))
non_uniform_sites <- uniformity_check == "Non-Uniform"
# Update matrices and data-frame(s)
genotypes.mx <- genotypes.mx[non_uniform_sites,]
variants.df <- variants.df[non_uniform_sites,]
gq.mx <- gq.mx[non_uniform_sites,]
dp.mx <- dp.mx[non_uniform_sites,]
alt_fraction.mx <- alt_fraction.mx[non_uniform_sites,]
# Clean-up
rm(uniformity_check.udf,uniformity_check,non_uniform_sites)
# Clean-up
rm(var_call_rates_nfe, var_call_rates_wecare, data.df, molten.df,
low_var_call_rates, genotypes_nfe.mx, genotypes_wecare.mx)
# Make separate genotypes matrices for nfe and wecare
genotypes_nfe.mx <- genotypes.mx[,1:198]
genotypes_wecare.mx <- genotypes.mx[,199:535]
dim(genotypes_nfe.mx)
dim(genotypes_wecare.mx)
genotypes_nfe.mx[1:5,1:5]
genotypes_wecare.mx[1:5,1:5]
# Fraction of NA genotypes
sum(is.na(genotypes.mx))/(nrow(genotypes.mx)*ncol(genotypes.mx))
sum(is.na(genotypes_nfe.mx))/(nrow(genotypes_nfe.mx)*ncol(genotypes_nfe.mx))
sum(is.na(genotypes_wecare.mx))/(nrow(genotypes_wecare.mx)*ncol(genotypes_wecare.mx))
# Index of non-NA gt
non_NA_gt <- !is.na(genotypes.mx)
non_NA_gt_nfe <- !is.na(genotypes_nfe.mx)
non_NA_gt_wecare <- !is.na(genotypes_wecare.mx)
# Make separate gq matrices for nfe and wecare
gq_nfe.mx <- gq.mx[,1:198]
gq_wecare.mx <- gq.mx[,199:535]
dim(gq_nfe.mx)
dim(gq_wecare.mx)
gq_nfe.mx[1:5,1:5]
gq_wecare.mx[1:5,1:5]
# GQ quartiles in non-NA genotypes
quantile(gq.mx[non_NA_gt], na.rm=TRUE)
quantile(gq_nfe.mx[non_NA_gt_nfe], na.rm=TRUE)
quantile(gq_wecare.mx[non_NA_gt_wecare], na.rm=TRUE)
# Mean GQ in non-NA genotypes
mean(gq.mx[non_NA_gt], na.rm=TRUE)
mean(gq_nfe.mx[non_NA_gt_nfe], na.rm=TRUE)
mean(gq_wecare.mx[non_NA_gt_wecare], na.rm=TRUE)
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of gq in non-NA genotypes", xlab="gq")
abline(v=min.gq, lty=2, col="red")
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of gq in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,1))
abline(v=min.gq, lty=2, col="red")
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of gq in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,1))
gq.mx[1:5,1:5]
# Index of non-NA gt
non_NA_gt <- !is.na(genotypes.mx)
non_NA_gt_nfe <- !is.na(genotypes_nfe.mx)
non_NA_gt_wecare <- !is.na(genotypes_wecare.mx)
# Make separate gq matrices for nfe and wecare
gq_nfe.mx <- gq.mx[,1:198]
gq_wecare.mx <- gq.mx[,199:535]
dim(gq_nfe.mx)
dim(gq_wecare.mx)
gq_nfe.mx[1:5,1:5]
gq_wecare.mx[1:5,1:5]
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,1))
abline(v=min.gq, lty=2, col="red")
hist(gq_nfe.mx[non_NA_gt_nfe],
main="NFE: histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,1))
abline(v=min.gq, lty=2, col="red")
hist(gq_wecare.mx[non_NA_gt_wecare],
main="WECARE: histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,1))
abline(v=min.gq, lty=2, col="red")
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq")
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,))
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,max(gq.mx)))
abline(v=min.gq, lty=2, col="red")
max(gq.mx)
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,max(gq.mx,na.rm=T)))
abline(v=min.gq, lty=2, col="red")
hist(gq_nfe.mx[non_NA_gt_nfe],
main="NFE: histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,max(gq_nfe.mx,na.rm=T)))
abline(v=min.gq, lty=2, col="red")
hist(gq_wecare.mx[non_NA_gt_wecare],
main="WECARE: histogram of GQ in non-NA genotypes\nafter DP and GQ filtering",
xlab="gq", xlim=c(0,max(gq_wecare.mx,na.rm=T)))
abline(v=min.gq, lty=2, col="red")
# Clean-up
rm(gq_nfe.mx,gq_wecare.mx)
# Make separate dp matrices for nfe and wecare
dp_nfe.mx <- dp.mx[,1:198]
dp_wecare.mx <- dp.mx[,199:535]
dim(dp_nfe.mx)
dim(dp_wecare.mx)
dp_nfe.mx[1:5,1:5]
dp_wecare.mx[1:5,1:5]
# DP quantiles in non-NA genotypes
quantile(dp.mx[non_NA_gt], na.rm=TRUE)
quantile(dp_nfe.mx[non_NA_gt_nfe], na.rm=TRUE)
quantile(dp_wecare.mx[non_NA_gt_wecare], na.rm=TRUE)
# Mean DP in non-NA genotypes
mean(dp.mx[non_NA_gt], na.rm=TRUE)
mean(dp_nfe.mx[non_NA_gt_nfe], na.rm=TRUE)
mean(dp_wecare.mx[non_NA_gt_wecare], na.rm=TRUE)
# dp (when gt is not NA !)
hist(dp.mx[non_NA_gt],
main="Histogram of dp in non-NA genotypes", xlab="dp")
abline(v=max.dp, lty=2, col="red")
abline(v=min.dp, lty=2, col="red")
hist(dp_nfe.mx[non_NA_gt_nfe],
main="NFE: histogram of dp in non-NA genotypes\nafter DP and GQ filtering", xlab="dp")
abline(v=max.dp, lty=2, col="red")
abline(v=min.dp, lty=2, col="red")
hist(dp_wecare.mx[non_NA_gt_wecare],
main="WECARE: histogram of dp in non-NA genotypes\nafter DP and GQ filtering", xlab="dp")
abline(v=max.dp, lty=2, col="red")
abline(v=min.dp, lty=2, col="red")
# Clean-up
rm(non_NA_gt,dp_nfe.mx,dp_wecare.mx,non_NA_gt_nfe,non_NA_gt_wecare)
# Call rates per variant (separately for NFE and WECARE !)
var_call_rates_nfe <- apply(genotypes_nfe.mx,1,call_rate.udf)
var_call_rates_wecare <- apply(genotypes_wecare.mx,1,call_rate.udf)
# Prepare data for ggplot hist
data.df <- data.frame(nfe=var_call_rates_nfe, wecare=var_call_rates_wecare)
molten.df <- melt(data.df)
colnames(molten.df) <- c("group","call_rate")
head(molten.df)
# Make plot
ggplot(molten.df, aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=15, position="identity", aes(y=..density..)) +
geom_vline(xintercept=min_var_call_rate, linetype="dashed", color = "red") +
labs(title="WECARE and NFE",
subtitle="before DP and GQ filtering",
x = "Variant call rate", y ="Density")
# Estimate proportion of varaints with low call rate (<85%)
sum(var_call_rates_nfe < min_var_call_rate)/length(var_call_rates_nfe)
sum(var_call_rates_wecare < min_var_call_rate)/length(var_call_rates_wecare)
low_var_call_rates <- var_call_rates_nfe < min_var_call_rate |
var_call_rates_wecare < min_var_call_rate
sum(low_var_call_rates)/nrow(genotypes.mx)
# Clean-up
rm(var_call_rates_nfe, var_call_rates_wecare, data.df, molten.df,
low_var_call_rates, genotypes_nfe.mx, genotypes_wecare.mx)
plot(call_rates, main="WECARE and NFE\nafter DP and GQ filtering",
ylab="Call rate per sample", xlab="Sample No")
call_rates <- apply(genotypes.mx,2,call_rate.udf)
plot(call_rates, main="WECARE and NFE\nafter DP and GQ filtering",
ylab="Call rate per sample", xlab="Sample No")
abline(h=0.5, lty=2, col="red")
abline(v=198.5, lty=2, col="red")
low_call_rate_indices <- which(call_rate < 0.5)
low_call_rate_values <- call_rates[low_call_rate_indices]
low_call_rate_indices <- which(call_rates < 0.5)
low_call_rate_values <- call_rates[low_call_rate_indices]
low_call_rate_samples <- names(low_call_rate_values)
text(x=low_call_rate_indices,y=low_call_rate_values,
labels=low_call_rate_samples,pos=c(3,4,4))
?text
plot(call_rates, main="WECARE and NFE\nafter DP and GQ filtering",
ylab="Call rate per sample", xlab="Sample No")
abline(h=0.5, lty=2, col="red")
abline(v=198.5, lty=2, col="red")
low_call_rate_indices <- which(call_rates < 0.5)
low_call_rate_values <- call_rates[low_call_rate_indices]
low_call_rate_samples <- names(low_call_rate_values)
text(x=low_call_rate_indices,y=low_call_rate_values,
labels=low_call_rate_samples,pos=c(3,4,4),cex=0.5)
plot(call_rates, main="WECARE and NFE\nafter DP and GQ filtering",
ylab="Call rate per sample", xlab="Sample No")
abline(h=0.5, lty=2, col="red")
abline(v=198.5, lty=2, col="red")
low_call_rate_indices <- which(call_rates < 0.5)
low_call_rate_values <- call_rates[low_call_rate_indices]
low_call_rate_samples <- names(low_call_rate_values)
text(x=low_call_rate_indices,y=low_call_rate_values,
labels=low_call_rate_samples,pos=c(3,4,4),cex=0.75)
plot(call_rates, main="WECARE and NFE\nafter DP and GQ filtering",
ylab="Call rate per sample", xlab="Sample No")
abline(h=0.5, lty=2, col="red")
abline(v=198.5, lty=2, col="red")
low_call_rate_indices <- which(call_rates < 0.5)
low_call_rate_values <- call_rates[low_call_rate_indices]
low_call_rate_samples <- names(low_call_rate_values)
text(x=low_call_rate_indices,y=low_call_rate_values,
labels=low_call_rate_samples,pos=4,cex=0.75)
# Clean-up
rm(call_rates,low_call_rate_indices,
low_call_rate_values,low_call_rate_samples)
# Clean-up
rm(var_call_rates_nfe, var_call_rates_wecare, data.df, molten.df,
low_var_call_rates, genotypes_nfe.mx, genotypes_wecare.mx,min_var_call_rate)
# Clean-up
rm(call_rates,low_call_rate_indices,min_sample_call_rate,
low_call_rate_values,low_call_rate_samples)
# Clean-up
rm(call_rates,low_call_rate_indices,min_sample_call_rate,
low_call_rate_values,low_call_rate_samples,call_rate.udf)
# Clean-up
rm(non_NA_gt,dp_nfe.mx,dp_wecare.mx,non_NA_gt_nfe,non_NA_gt_wecare,
max.dp,min.dp,dp.mx)
# Clean-up
rm(gq_nfe.mx,gq_wecare.mx,min.gq,gq.mx)
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
dim(alt_fraction.mx)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(phenotypes.df$wes_id != colnames(alt_fraction.mx))
sum(variants.df$ID != rownames(genotypes.mx))
sum(variants.df$ID != rownames(alt_fraction.mx))
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s06_qc_filters")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s06_qc_filters")
# Libraries
library(reshape2)
library(ggplot2)
# Call rate thresholds
min_var_call_rate <- 0.85 # for filtering
min_sample_call_rate <- 0.5 # for estimate of the future filter effect
load(file.path(data_folder,"s02_filter_by_alt_fraction.RData"))
# Update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s06_qc_filters")
data_folder <- file.path(project_folder,"data","s06_qc_filters")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
# Fraction of NA genotypes
sum(is.na(genotypes.mx))/(nrow(genotypes.mx)*ncol(genotypes.mx))
genotypes.mx[1:5,1:5]
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s06_qc_filters")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s06_qc_filters")
#dir.create(data_folder)
# Thresholds for genotypes filtering
min.gq <- 20
min.dp <- 10
max.dp <- 354 # 10x mean dp
# Call rate thresholds for estimates of future filters effects
min_var_call_rate <- 0.85
min_sample_call_rate <- 0.5
# Libraries
library(reshape2)
library(ggplot2)
load(file.path(project_folder,"data","s05_update_and_cleaning","s03_update_phenotypes.RData"))
# Update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s06_qc_filters")
data_folder <- file.path(project_folder,"data","s06_qc_filters")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
dim(dp.mx)
dim(gq.mx)
dim(alt_fraction.mx)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(phenotypes.df$wes_id != colnames(gq.mx))
sum(phenotypes.df$wes_id != colnames(dp.mx))
sum(phenotypes.df$wes_id != colnames(alt_fraction.mx))
sum(variants.df$ID != rownames(genotypes.mx))
sum(variants.df$ID != rownames(gq.mx))
sum(variants.df$ID != rownames(dp.mx))
sum(variants.df$ID != rownames(alt_fraction.mx))
table(variants.df$FILTER, useNA = "alwasys")
table(variants.df$FILTER, useNA = "always")
# Make separate genotypes matrices for nfe and wecare
genotypes_nfe.mx <- genotypes.mx[,1:198]
genotypes_wecare.mx <- genotypes.mx[,199:535]
dim(genotypes_nfe.mx)
dim(genotypes_wecare.mx)
genotypes_nfe.mx[1:5,1:5]
genotypes_wecare.mx[1:5,1:5]
# Fraction of NA genotypes
sum(is.na(genotypes.mx))/(nrow(genotypes.mx)*ncol(genotypes.mx))
sum(is.na(genotypes_nfe.mx))/(nrow(genotypes_nfe.mx)*ncol(genotypes_nfe.mx))
sum(is.na(genotypes_wecare.mx))/(nrow(genotypes_wecare.mx)*ncol(genotypes_wecare.mx))
# Index of non-NA gt
non_NA_gt <- !is.na(genotypes.mx)
non_NA_gt_nfe <- !is.na(genotypes_nfe.mx)
non_NA_gt_wecare <- !is.na(genotypes_wecare.mx)
# Make separate gq matrices for nfe and wecare
gq_nfe.mx <- gq.mx[,1:198]
gq_wecare.mx <- gq.mx[,199:535]
dim(gq_nfe.mx)
dim(gq_wecare.mx)
gq_nfe.mx[1:5,1:5]
gq_wecare.mx[1:5,1:5]
# GQ quartiles in non-NA genotypes
quantile(gq.mx[non_NA_gt], na.rm=TRUE)
quantile(gq_nfe.mx[non_NA_gt_nfe], na.rm=TRUE)
quantile(gq_wecare.mx[non_NA_gt_wecare], na.rm=TRUE)
# Mean GQ in non-NA genotypes
mean(gq.mx[non_NA_gt], na.rm=TRUE)
mean(gq_nfe.mx[non_NA_gt_nfe], na.rm=TRUE)
mean(gq_wecare.mx[non_NA_gt_wecare], na.rm=TRUE)
# gq  (when gt is not NA !)
hist(gq.mx[non_NA_gt],
main="Histogram of GQ in non-NA genotypes\nbefore DP and GQ filtering",
xlab="gq", xlim=c(0,max(gq.mx,na.rm=T)))
abline(v=min.gq, lty=2, col="red")
hist(gq_nfe.mx[non_NA_gt_nfe],
main="NFE: histogram of GQ in non-NA genotypes\nbefore DP and GQ filtering",
xlab="gq", xlim=c(0,max(gq_nfe.mx,na.rm=T)))
abline(v=min.gq, lty=2, col="red")
hist(gq_wecare.mx[non_NA_gt_wecare],
main="WECARE: histogram of GQ in non-NA genotypes\nbefore DP and GQ filtering",
xlab="gq", xlim=c(0,max(gq_wecare.mx,na.rm=T)))
abline(v=min.gq, lty=2, col="red")
# crude estimates for proportions of genotypes to be removed by filters
sum(gq.mx < min.gq, na.rm = T) / sum(non_NA_gt)
# Clean-up
rm(gq_nfe.mx,gq_wecare.mx)
# Make separate dp matrices for nfe and wecare
dp_nfe.mx <- dp.mx[,1:198]
dp_wecare.mx <- dp.mx[,199:535]
dim(dp_nfe.mx)
dim(dp_wecare.mx)
dp_nfe.mx[1:5,1:5]
dp_wecare.mx[1:5,1:5]
# DP quantiles in non-NA genotypes
quantile(dp.mx[non_NA_gt], na.rm=TRUE)
quantile(dp_nfe.mx[non_NA_gt_nfe], na.rm=TRUE)
quantile(dp_wecare.mx[non_NA_gt_wecare], na.rm=TRUE)
# Mean DP in non-NA genotypes
mean(dp.mx[non_NA_gt], na.rm=TRUE)
mean(dp_nfe.mx[non_NA_gt_nfe], na.rm=TRUE)
mean(dp_wecare.mx[non_NA_gt_wecare], na.rm=TRUE)
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s06_qc_filters")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s06_qc_filters")
# Libraries
library(reshape2)
library(ggplot2)
# Call rate thresholds
min_var_call_rate <- 0.85 # for filtering
min_sample_call_rate <- 0.5 # for estimate of the future filter effect
load(file.path(data_folder,"s02_filter_by_alt_fraction.RData"))
# Update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s06_qc_filters")
data_folder <- file.path(project_folder,"data","s06_qc_filters")
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc,useNA = "always")
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s06_qc_filters")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s06_qc_filters")
# Libraries
library(reshape2)
library(ggplot2)
# Call rate thresholds
min_var_call_rate <- 0.85 # for filtering
min_sample_call_rate <- 0.5 # for estimate of the future filter effect
load(file.path(data_folder,"s02_filter_by_alt_fraction.RData"))
# Update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_wo_danish_2021","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s06_qc_filters")
data_folder <- file.path(project_folder,"data","s06_qc_filters")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc,useNA = "always")
# Fraction of NA genotypes
sum(is.na(genotypes.mx))/(nrow(genotypes.mx)*ncol(genotypes.mx))
genotypes.mx[1:5,1:5]
# Function to calculate call rate
call_rate.udf <- function(x){1-sum(is.na(x))/length(x)}
# Calculate call rates
call_rates <- apply(genotypes.mx,2,call_rate.udf)
# Plot
plot(call_rates, main="WECARE and NFE\nafter Alt-Fraction filtering",
ylab="Call rate per sample", xlab="Sample No")
abline(h=min_sample_call_rate, lty=2, col="red")
abline(v=198.5, lty=2, col="red")
low_call_rate_indices <- which(call_rates < 0.5)
low_call_rate_values <- call_rates[low_call_rate_indices]
low_call_rate_samples <- names(low_call_rate_values)
text(x=low_call_rate_indices,y=low_call_rate_values,
labels=low_call_rate_samples,pos=4,cex=0.75)
# Clean-up
rm(call_rates,low_call_rate_indices,
low_call_rate_values,low_call_rate_samples)
# Make separate gq matrices for nfe and wecare
genotypes_nfe.mx <- genotypes.mx[,1:198]
genotypes_wecare.mx <- genotypes.mx[,199:535]
dim(genotypes_nfe.mx)
dim(genotypes_wecare.mx)
genotypes_nfe.mx[1:5,1:5]
genotypes_wecare.mx[1:5,1:5]
# Call rates per variant (separately for NFE and WECARE !)
var_call_rates_nfe <- apply(genotypes_nfe.mx,1,call_rate.udf)
var_call_rates_wecare <- apply(genotypes_wecare.mx,1,call_rate.udf)
# Prepare data for ggplot hist
data.df <- data.frame(nfe=var_call_rates_nfe, wecare=var_call_rates_wecare)
molten.df <- melt(data.df)
colnames(molten.df) <- c("group","call_rate")
head(molten.df)
# Make plot
ggplot(molten.df, aes(x=call_rate, fill=group)) +
geom_histogram(alpha=0.5, bins=15, position="identity", aes(y=..density..)) +
geom_vline(xintercept=min_var_call_rate, linetype="dashed", color = "red") +
labs(title="WECARE and NFE",
subtitle="before variant call rate filtering",
x = "Variant call rate", y ="Density")
# Estimate proportion of variants with low call rate (<85%)
sum(var_call_rates_nfe < min_var_call_rate)/length(var_call_rates_nfe)
sum(var_call_rates_wecare < min_var_call_rate)/length(var_call_rates_wecare)
low_var_call_rates <- var_call_rates_nfe < min_var_call_rate |
var_call_rates_wecare < min_var_call_rate
sum(low_var_call_rates)/nrow(genotypes.mx)
sum(low_var_call_rates)
sum(!low_var_call_rates)
