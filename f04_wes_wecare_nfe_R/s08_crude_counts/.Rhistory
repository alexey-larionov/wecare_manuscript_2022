data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
load(file.path(project_folder,"data","s07_relatedness_and_pca","s06_update_main_dataset.RData"))
# update folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
data_folder <- file.path(project_folder,"data","s08_crude_counts")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
keep <- phenotypes.df$sample.ID != "P1_F10"
colnames(phenotypes.df)
keep <- phenotypes.df$sample.ID != "P1_F10"
sum(keep)
genotypes.mx <- genotypes.mx[,keep]
phenotypes.df <- phenotypes.df[keep,]
table(phenotypes.df$cc, useNA = "always")
rm(keep)
# Function to detect uniform numeric vector
uniformity_check.udf <- function(x){
if (all(is.na(x))){"All_NA"}
else if (min(x,na.rm=T)==max(x,na.rm=T)){"Uniform"}
else {"Non-Uniform"}}
uniformity_check <- apply(genotypes.mx,1,uniformity_check.udf)
table(uniformity_check, useNA = "always")
# Update matrices and data-frame(s)
non_uniform_sites <- uniformity_check == "Non-Uniform"
genotypes.mx <- genotypes.mx[non_uniform_sites,]
variants.df <- variants.df[non_uniform_sites,]
# Check result
dim(genotypes.mx)
dim(variants.df)
# Clean-up
rm(uniformity_check.udf, uniformity_check, non_uniform_sites)
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
save.image(file.path(data_folder,"s00_remove_P1_F10.RData"))
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries and functions
library(dplyr)
library(reshape2)
library(ggplot2)
source(file.path(project_folder,"scripts","f00_functions","f01_qqunif_plot.R"))
source(file.path(project_folder,"scripts","f00_functions","f02_tryCatchAdv.R"))
load(file.path(data_folder,"s00_remove_P1_F10.RData"))
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
table(phenotypes.df$cc, useNA = "always")
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
nfe <- phenotypes.df$cc == -1
controls <- phenotypes.df$cc == 0
cases <- phenotypes.df$cc == 1
col_names <- c("id",
"total_ac","total_an","total_af",
"nfe_ac","nfe_an","nfe_af",
"controls_ac","controls_an","controls_af",
"cases_ac","cases_an","cases_af",
"trend_direction","trend_test_p",
"test_status","test_message")
variants_crude_counts.mx <- matrix(nrow=0,ncol=length(col_names))
colnames(variants_crude_counts.mx) <- col_names
rm(col_names)
# Time
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries
library(dplyr)
load(file.path(data_folder,"s01_crude_counts_per_variant.RData"))
# Update working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
bc11_genes <- scan(file.path(data_folder,"bc11_genes.txt"),what="character")
table(phenotypes.df$cc, useNA = "always")
View(tail(variants.df))
colnames(variants.df)
View(tail(variants.df[,c(1:10,100:115)]))
sum(!is.na(variants.df$test_message))
x <- !is.na(variants.df$test_message)
View(tail(variants.df[x,c(1:10,100:115)]))
View(variants.df[x,c(1:10,100:115)])
View(variants.df[x,c(36,1:10,100:115)])
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries and functions
library(dplyr)
library(reshape2)
library(ggplot2)
source(file.path(project_folder,"scripts","f00_functions","f01_qqunif_plot.R"))
source(file.path(project_folder,"scripts","f00_functions","f02_tryCatchAdv.R"))
x <- list(a=c(1,2),b=c(3,4))
x$a
x$b
x$c
exists(x$a)
missing(x$a)
is.na(x$a)
is.na(x$b)
is.na(x$c)
?is.na
anyNA(x$b)
anyNA(x$c)
is.null(x$a)
is.null(x$c)
exists("a",where=x)
x <- list(a=c(1,2),b=c(3,4),c=list(d=1,e=2))
x$c
x$c$d
is.null(x$a$f)
is.null(x$a)
View(tryCatchAdv)
is.null(x$c$f)
View(tryCatchAdv)
?tryCatch
# Chunk 1
options(width=999)
# Chunk 2
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries and functions
library(dplyr)
library(reshape2)
library(ggplot2)
source(file.path(project_folder,"scripts","f00_functions","f01_qqunif_plot.R"))
source(file.path(project_folder,"scripts","f00_functions","f02_tryCatchAdv.R"))
# Chunk 3
load(file.path(data_folder,"s00_remove_P1_F10.RData"))
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Chunk 4
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
table(phenotypes.df$cc, useNA = "always")
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
# Chunk 5
table(phenotypes.df$cc, useNA = "always")
nfe <- phenotypes.df$cc == -1
controls <- phenotypes.df$cc == 0
cases <- phenotypes.df$cc == 1
# Chunk 6
col_names <- c("id",
"total_ac","total_an","total_af",
"nfe_ac","nfe_an","nfe_af",
"controls_ac","controls_an","controls_af",
"cases_ac","cases_an","cases_af",
"trend_direction","trend_test_p",
"test_status","test_message")
variants_crude_counts.mx <- matrix(nrow=0,ncol=length(col_names))
colnames(variants_crude_counts.mx) <- col_names
rm(col_names)
# for testing
var <- 25128
# Get variant ID
id <- variants.df[var,"ID"]
which(variants.df$POS == 183201363)
# for testing
var <- 8197
# Get variant ID
id <- variants.df[var,"ID"]
# Get vector of genotypes
genotypes <- genotypes.mx[var,]
# Calculate crude counts
total_ac <- sum(genotypes, na.rm=T)
total_an <- 2*sum(!is.na(genotypes))
total_af <- total_ac / total_an
nfe_ac <- sum(genotypes[nfe], na.rm=T)
nfe_an <- 2*sum(!is.na(genotypes[nfe]))
nfe_af <- nfe_ac / nfe_an
controls_ac <- sum(genotypes[controls], na.rm=T)
controls_an <- 2*sum(!is.na(genotypes[controls]))
controls_af <- controls_ac / controls_an
cases_ac <- sum(genotypes[cases], na.rm=T)
cases_an <- 2*sum(!is.na(genotypes[cases]))
cases_af <- cases_ac / cases_an
# Determine the trend direction
"none" -> trend_direction
if(nfe_af < controls_af & controls_af < cases_af) "risk" -> trend_direction
if(nfe_af > controls_af & controls_af > cases_af) "protective" -> trend_direction
if(nfe_af < cases_af & trend_direction=="none") "toward_risk" -> trend_direction
if(nfe_af > cases_af & trend_direction=="none") "toward_protection" -> trend_direction
# Proportions trend test: nfe-ubc-cbc
ac_prop_trend <- c(nfe_ac,controls_ac,cases_ac)
an_prop_trend <- c(nfe_an,controls_an,cases_an)
try_trend_test <- tryCatchAdv(prop.trend.test(ac_prop_trend, an_prop_trend))
if(is.null(try_trend_test$value$p.value)){
trend_test_p <- NA
}else{
trend_test_p <- try_trend_test$value$p.value
}
test_status <- try_trend_test$status
test_message <- try_trend_test$message$message
# Compile result
result <- c(id,
total_ac,total_an,total_af,
nfe_ac,nfe_an,nfe_af,
controls_ac,controls_an,controls_af,
cases_ac,cases_an,cases_af,
trend_direction,trend_test_p,test_status,test_message)
# Add result to the table
variants_crude_counts.mx <- rbind(variants_crude_counts.mx, result)
# Clean-up (to avoid chances of counts carry-over between records)
rm(id,genotypes,
total_ac,total_an,total_af,
nfe_ac,nfe_an,nfe_af,
controls_ac,controls_an,controls_af,
cases_ac,cases_an,cases_af,
trend_direction,try_trend_test,
ac_prop_trend, an_prop_trend,
trend_test_p,test_status,test_message,
result)
# Check result
dim(variants_crude_counts.mx)
head(variants_crude_counts.mx)
tail(variants_crude_counts.mx)
# Check variants with warning in the trend test
variants_crude_counts.mx[!is.na(variants_crude_counts.mx$test_message),]
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries and functions
library(dplyr)
library(reshape2)
library(ggplot2)
source(file.path(project_folder,"scripts","f00_functions","f01_qqunif_plot.R"))
source(file.path(project_folder,"scripts","f00_functions","f02_tryCatchAdv.R"))
# Chunk 1
options(width=999)
# Chunk 2
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries and functions
library(dplyr)
library(reshape2)
library(ggplot2)
source(file.path(project_folder,"scripts","f00_functions","f01_qqunif_plot.R"))
source(file.path(project_folder,"scripts","f00_functions","f02_tryCatchAdv.R"))
# Chunk 3
load(file.path(data_folder,"s00_remove_P1_F10.RData"))
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Chunk 4
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
table(phenotypes.df$cc, useNA = "always")
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
# Chunk 5
table(phenotypes.df$cc, useNA = "always")
nfe <- phenotypes.df$cc == -1
controls <- phenotypes.df$cc == 0
cases <- phenotypes.df$cc == 1
# Chunk 6
col_names <- c("id",
"total_ac","total_an","total_af",
"nfe_ac","nfe_an","nfe_af",
"controls_ac","controls_an","controls_af",
"cases_ac","cases_an","cases_af",
"trend_direction","trend_test_p",
"test_status","test_message")
variants_crude_counts.mx <- matrix(nrow=0,ncol=length(col_names))
colnames(variants_crude_counts.mx) <- col_names
rm(col_names)
# for testing
var=1
# Get variant ID
id <- variants.df[var,"ID"]
# Get vector of genotypes
genotypes <- genotypes.mx[var,]
# Calculate crude counts
total_ac <- sum(genotypes, na.rm=T)
total_an <- 2*sum(!is.na(genotypes))
total_af <- total_ac / total_an
nfe_ac <- sum(genotypes[nfe], na.rm=T)
nfe_an <- 2*sum(!is.na(genotypes[nfe]))
nfe_af <- nfe_ac / nfe_an
controls_ac <- sum(genotypes[controls], na.rm=T)
controls_an <- 2*sum(!is.na(genotypes[controls]))
controls_af <- controls_ac / controls_an
cases_ac <- sum(genotypes[cases], na.rm=T)
cases_an <- 2*sum(!is.na(genotypes[cases]))
cases_af <- cases_ac / cases_an
# Determine the trend direction
"none" -> trend_direction
if(nfe_af < controls_af & controls_af < cases_af) "risk" -> trend_direction
if(nfe_af > controls_af & controls_af > cases_af) "protective" -> trend_direction
if(nfe_af < cases_af & trend_direction=="none") "toward_risk" -> trend_direction
if(nfe_af > cases_af & trend_direction=="none") "toward_protection" -> trend_direction
# Proportions trend test: nfe-ubc-cbc
ac_prop_trend <- c(nfe_ac,controls_ac,cases_ac)
an_prop_trend <- c(nfe_an,controls_an,cases_an)
try_trend_test <- tryCatchAdv(prop.trend.test(ac_prop_trend, an_prop_trend))
trend_test_p <- try_trend_test$value$p.value
test_status <- try_trend_test$status
if(is.null(try_trend_test$message$message)){
test_message <- NA
}else{
test_message <- try_trend_test$message$message
}
is.null(try_trend_test$message$message)
is.na(try_trend_test$message)
View(tryCatchAdv)
# Time
Sys.time()
# Clean up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F)
# Folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
# Libraries
library(dplyr)
load(file.path(data_folder,"s01_crude_counts_per_variant.RData"))
# Update working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_2022","wes","s02_wes_wecare_nfe")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# folder already exists and contains a text file with BC11 genes
bc11_genes <- scan(file.path(data_folder,"bc11_genes.txt"),what="character")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
table(phenotypes.df$cc, useNA = "always")
# Check list of genes
bc11_genes
bc11_variants.df <- variants.df[variants.df$vep_SYMBOL %in% bc11_genes,]
dim(bc11_variants.df)
# Explore ClinVar annotations
bc11_variants.df %>%
group_by(CLNSIG) %>%
summarise(counts=n()) %>%
arrange(desc(counts))
# Select known_pathogenic variants
known_pathogenic <-
grepl("Pathogenic",bc11_variants.df$CLNSIG) |
grepl("Likely_pathogenic",bc11_variants.df$CLNSIG)
# Check the count
sum(known_pathogenic)
predicted_lof <- bc11_variants.df$vep_IMPACT == "HIGH"
sum(predicted_lof)
# Split SIFT
bc11_variants.df <-
bc11_variants.df %>%
mutate(SIFT_call=sub("\\(.*\\)","",vep_SIFT)) %>%
mutate(SIFT_score=as.numeric(
sub(".*\\(","", sub("\\)","",vep_SIFT)))) %>%
select(-vep_SIFT)
bc11_variants.df %>%
group_by(SIFT_call) %>%
summarise(count=n()) %>%
arrange(desc(count))
# Split PolyPhen
bc11_variants.df <-
bc11_variants.df %>%
mutate(PolyPhen_call=sub("\\(.*\\)","",vep_PolyPhen)) %>%
mutate(PolyPhen_score=as.numeric(
sub(".*\\(","", sub("\\)","",vep_PolyPhen)))) %>%
select(-vep_PolyPhen)
bc11_variants.df %>%
group_by(PolyPhen_call) %>%
summarise(count=n()) %>%
arrange(desc(count))
class(bc11_variants.df$vep_CADD_PHRED)
head(bc11_variants.df$vep_CADD_PHRED)
sum(is.na(bc11_variants.df$vep_CADD_PHRED))
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$cc, useNA = "always")
