variants.df <- variants.df[non_uniform_sites,]
# Check result
dim(gt_add.mx)
dim(variants.df)
table(phenotypes.df$cc, useNA = "always")
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Files and folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s04_select_samples")
scripts_folder <- file.path(base_folder,"scripts","s04_select_samples")
setwd(scripts_folder)
# Load data
load(file.path(data_folder,"s02_remove_failed_and_duplicates.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s04_select_samples")
scripts_folder <- file.path(base_folder,"scripts","s04_select_samples")
ls()
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(ad.mx)
dim(alt.mx)
dim(ref.mx)
dim(dp.mx)
dim(gq.mx)
dim(meta.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(variants.df)
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
BRCA_PALB_carriers <- c("48_S416_L008", "137_S323_L008", "140_S394_L008",
"311_S137_L007", "317_S174_L007", "377_S279_L008")
phenotypes.df[BRCA_PALB_carriers,c("cc","danish")]
retained_samples <- ! colnames(gt_add.mx) %in% BRCA_PALB_carriers
sum(retained_samples)
gt_add.mx <- gt_add.mx[,retained_samples]
gt_num.mx <- gt_num.mx[,retained_samples]
gt_chr.mx <- gt_chr.mx[,retained_samples]
ad.mx <- ad.mx[,retained_samples]
alt.mx <- alt.mx[,retained_samples]
ref.mx <- ref.mx[,retained_samples]
dp.mx <- dp.mx[,retained_samples]
gq.mx <- gq.mx[,retained_samples]
phenotypes.df <- phenotypes.df[retained_samples,]
# Check result
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
dim(gt_add.mx)
dim(phenotypes.df)
gt_add.mx[1:5,1:5]
phenotypes.df[1:5,1:5]
phenotypes.df[708:713,1:5]
phenotypes.df[708:712,1:5]
table(phenotypes.df$cc)
table(phenotypes.df$danish)
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Clean-up
rm(retained_samples, BRCA_PALB_carriers)
# Function to detect uniform numeric vector
uniformity_check.udf <- function(x){
if (all(is.na(x))){"All_NA"}
else if (min(x,na.rm=T)==max(x,na.rm=T)){"Uniform"}
else {"Non-Uniform"}}
# Make the filter
uniformity_check <- apply(gt_add.mx,1,uniformity_check.udf)
summary(as.factor(uniformity_check))
non_uniform_sites <- uniformity_check == "Non-Uniform"
table(phenotypes.df$cc)
# Clean-up
rm(uniformity_check.udf, uniformity_check, non_uniform_sites)
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Clean-up
rm(uniformity_check.udf, uniformity_check, non_uniform_sites)
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Files and folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s04_select_samples")
scripts_folder <- file.path(base_folder,"scripts","s04_select_samples")
setwd(scripts_folder)
# Load data
load(file.path(data_folder,"s03_exclude_BRCA1_BCRA2_PALB2_carriers.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s04_select_samples")
scripts_folder <- file.path(base_folder,"scripts","s04_select_samples")
ls()
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(ad.mx)
dim(alt.mx)
dim(ref.mx)
dim(dp.mx)
dim(gq.mx)
dim(meta.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(variants.df)
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
# Check data
table(phenotypes.df$cc)
table(phenotypes.df$danish)
# Check data
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Remove danish
retained_samples <- ! phenotypes.df$danish
sum(retained_samples)
# Remove danish
sum(phenotypes.df$danish)
sum(retained_samples)
gt_add.mx <- gt_add.mx[,retained_samples]
gt_num.mx <- gt_num.mx[,retained_samples]
gt_chr.mx <- gt_chr.mx[,retained_samples]
ad.mx <- ad.mx[,retained_samples]
alt.mx <- alt.mx[,retained_samples]
ref.mx <- ref.mx[,retained_samples]
dp.mx <- dp.mx[,retained_samples]
gq.mx <- gq.mx[,retained_samples]
phenotypes.df <- phenotypes.df[retained_samples,]
# Check result
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
dim(gt_add.mx)
dim(phenotypes.df)
gt_add.mx[1:5,1:5]
phenotypes.df[1:5,1:5]
phenotypes.df[583:588,1:5]
phenotypes.df[583:587,1:5]
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Clean-up
rm(retained_samples)
# Function to detect uniform numeric vector
uniformity_check.udf <- function(x){
if (all(is.na(x))){"All_NA"}
else if (min(x,na.rm=T)==max(x,na.rm=T)){"Uniform"}
else {"Non-Uniform"}}
# Make the filter
uniformity_check <- apply(gt_add.mx,1,uniformity_check.udf)
summary(as.factor(uniformity_check))
# Remove non-polymorphic variants
gt_add.mx <- gt_add.mx[non_uniform_sites,]
summary(as.factor(uniformity_check))
non_uniform_sites <- uniformity_check == "Non-Uniform"
# Remove non-polymorphic variants
gt_add.mx <- gt_add.mx[non_uniform_sites,]
gt_num.mx <- gt_num.mx[non_uniform_sites,]
gt_chr.mx <- gt_chr.mx[non_uniform_sites,]
ad.mx <- ad.mx[non_uniform_sites,]
alt.mx <- alt.mx[non_uniform_sites,]
ref.mx <- ref.mx[non_uniform_sites,]
dp.mx <- dp.mx[non_uniform_sites,]
gq.mx <- gq.mx[non_uniform_sites,]
variants.df <- variants.df[non_uniform_sites,]
# Check result
dim(gt_add.mx)
dim(variants.df)
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Clean-up
rm(uniformity_check.udf, uniformity_check, non_uniform_sites)
ls()
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(ad.mx)
dim(alt.mx)
dim(ref.mx)
dim(dp.mx)
dim(gq.mx)
dim(meta.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(variants.df)
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Files and folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s04_select_samples")
scripts_folder <- file.path(base_folder,"scripts","s04_select_samples")
setwd(scripts_folder)
load(file.path(data_folder, "s04_exclude_danish.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s04_select_samples")
scripts_folder <- file.path(base_folder,"scripts","s04_select_samples")
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(ad.mx)
dim(ref.mx)
dim(alt.mx)
dim(gq.mx)
dim(dp.mx)
dim(variants.df)
colnames(variants.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(variants.df)
colnames(variants.df)
dim(meta.df)
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(ad.mx))
sum(rownames(gt_add.mx) != rownames(ref.mx))
sum(rownames(gt_add.mx) != rownames(alt.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(ref.mx))
sum(colnames(gt_add.mx) != colnames(alt.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
# Prepare lists of samples
table(phenotypes.df$cc, useNA = "always")
ampliseq_samples <- phenotypes.df$cc %in% c(0,1)
nfe_samples <- phenotypes.df$cc == -1
sum(ampliseq_samples)
sum(nfe_samples)
colnames(gt_add.mx)[ampliseq_samples]
colnames(gt_add.mx)[nfe_samples]
# Remove NFE
gt_add.mx <- gt_add.mx[,ampliseq_samples]
gt_num.mx <- gt_num.mx[,ampliseq_samples]
gt_chr.mx <- gt_chr.mx[,ampliseq_samples]
ad.mx <- ad.mx[,ampliseq_samples]
ref.mx <- ref.mx[,ampliseq_samples]
alt.mx <- alt.mx[,ampliseq_samples]
gq.mx <- gq.mx[,ampliseq_samples]
dp.mx <- dp.mx[,ampliseq_samples]
phenotypes.df <- phenotypes.df[ampliseq_samples,]
# Check result
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
dim(gt_add.mx)
dim(phenotypes.df)
gt_add.mx[1:5,1:5]
phenotypes.df[1:5,1:5]
phenotypes.df[583:588,1:5]
gt_add.mx[1:5,1:5]
dim(phenotypes.df)
phenotypes.df[385:389,1:5]
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Clean-up
rm(ampliseq_samples,nfe_samples)
# Function to detect uniform numeric vector
uniformity_check.udf <- function(x){
if (all(is.na(x))){"All_NA"}
else if (min(x,na.rm=T)==max(x,na.rm=T)){"Uniform"}
else {"Non-Uniform"}}
# Make the filter
uniformity_check <- apply(gt_add.mx,1,uniformity_check.udf)
summary(as.factor(uniformity_check))
non_uniform_sites <- uniformity_check == "Non-Uniform"
# Remove non-polymorphic variants
gt_add.mx <- gt_add.mx[non_uniform_sites,]
gt_num.mx <- gt_num.mx[non_uniform_sites,]
gt_chr.mx <- gt_chr.mx[non_uniform_sites,]
ad.mx <- ad.mx[non_uniform_sites,]
alt.mx <- alt.mx[non_uniform_sites,]
ref.mx <- ref.mx[non_uniform_sites,]
dp.mx <- dp.mx[non_uniform_sites,]
gq.mx <- gq.mx[non_uniform_sites,]
variants.df <- variants.df[non_uniform_sites,]
# Check result
dim(gt_add.mx)
dim(variants.df)
table(phenotypes.df$cc)
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Clean-up
rm(uniformity_check.udf, uniformity_check, non_uniform_sites)
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(ad.mx)
dim(ref.mx)
dim(alt.mx)
dim(gq.mx)
dim(dp.mx)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(variants.df)
dim(meta.df)
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(ad.mx))
sum(rownames(gt_add.mx) != rownames(ref.mx))
sum(rownames(gt_add.mx) != rownames(alt.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(ad.mx))
sum(colnames(gt_add.mx) != colnames(ref.mx))
sum(colnames(gt_add.mx) != colnames(alt.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
quantile(phenotypes.df$sub_dx_age)
mean(phenotypes.df$sub_dx_age)
# Chunk 1
options(width = 999)
# Chunk 2
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Files and folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s04_select_samples")
scripts_folder <- file.path(base_folder,"scripts","s04_select_samples")
setwd(scripts_folder)
# Chunk 3
load(file.path(data_folder, "s04_exclude_danish.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s04_select_samples")
scripts_folder <- file.path(base_folder,"scripts","s04_select_samples")
# Chunk 4
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(ad.mx)
dim(ref.mx)
dim(alt.mx)
dim(gq.mx)
dim(dp.mx)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(variants.df)
colnames(variants.df)
dim(meta.df)
# Check consistence of rownames and colnames
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(ad.mx))
sum(rownames(gt_add.mx) != rownames(ref.mx))
sum(rownames(gt_add.mx) != rownames(alt.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(ref.mx))
sum(colnames(gt_add.mx) != colnames(alt.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
# Chunk 5
# Prepare lists of samples
table(phenotypes.df$cc, useNA = "always")
ampliseq_samples <- phenotypes.df$cc %in% c(0,1)
nfe_samples <- phenotypes.df$cc == -1
sum(ampliseq_samples)
sum(nfe_samples)
colnames(gt_add.mx)[ampliseq_samples]
colnames(gt_add.mx)[nfe_samples]
# Remove NFE
gt_add.mx <- gt_add.mx[,ampliseq_samples]
gt_num.mx <- gt_num.mx[,ampliseq_samples]
gt_chr.mx <- gt_chr.mx[,ampliseq_samples]
ad.mx <- ad.mx[,ampliseq_samples]
ref.mx <- ref.mx[,ampliseq_samples]
alt.mx <- alt.mx[,ampliseq_samples]
gq.mx <- gq.mx[,ampliseq_samples]
dp.mx <- dp.mx[,ampliseq_samples]
phenotypes.df <- phenotypes.df[ampliseq_samples,]
# Check result
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
dim(gt_add.mx)
dim(phenotypes.df)
gt_add.mx[1:5,1:5]
phenotypes.df[1:5,1:5]
phenotypes.df[385:389,1:5]
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Clean-up
rm(ampliseq_samples,nfe_samples)
# Chunk 6
# Function to detect uniform numeric vector
uniformity_check.udf <- function(x){
if (all(is.na(x))){"All_NA"}
else if (min(x,na.rm=T)==max(x,na.rm=T)){"Uniform"}
else {"Non-Uniform"}}
# Make the filter
uniformity_check <- apply(gt_add.mx,1,uniformity_check.udf)
summary(as.factor(uniformity_check))
non_uniform_sites <- uniformity_check == "Non-Uniform"
# Remove non-polymorphic variants
gt_add.mx <- gt_add.mx[non_uniform_sites,]
gt_num.mx <- gt_num.mx[non_uniform_sites,]
gt_chr.mx <- gt_chr.mx[non_uniform_sites,]
ad.mx <- ad.mx[non_uniform_sites,]
alt.mx <- alt.mx[non_uniform_sites,]
ref.mx <- ref.mx[non_uniform_sites,]
dp.mx <- dp.mx[non_uniform_sites,]
gq.mx <- gq.mx[non_uniform_sites,]
variants.df <- variants.df[non_uniform_sites,]
# Check result
dim(gt_add.mx)
dim(variants.df)
table(phenotypes.df$cc, useNA = "always")
table(phenotypes.df$danish, useNA = "always")
table(phenotypes.df[,c("cc","danish")], useNA = "always")
# Clean-up
rm(uniformity_check.udf, uniformity_check, non_uniform_sites)
# Chunk 7
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(ad.mx)
dim(ref.mx)
dim(alt.mx)
dim(gq.mx)
dim(dp.mx)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(variants.df)
dim(meta.df)
# Check consistence of rownames and colnames
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(ad.mx))
sum(rownames(gt_add.mx) != rownames(ref.mx))
sum(rownames(gt_add.mx) != rownames(alt.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(ad.mx))
sum(colnames(gt_add.mx) != colnames(ref.mx))
sum(colnames(gt_add.mx) != colnames(alt.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
quantile(phenotypes.df$sub_dx_age)
mean(phenotypes.df$sub_dx_age)
write.table(phenotypes.df,
file.path(data_folder, "s05_phenotypes.txt"),
quote=F,row.names=F,sep="\t")
