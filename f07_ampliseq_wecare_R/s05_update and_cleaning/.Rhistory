# Detect variants violating HWE
hwe_violators <- variants.df$hwe_biallelic < 1e-6 & !is.na(variants.df$hwe_biallelic)
sum(hwe_violators)
# Remove HWE violators
gt.mx <- gt.mx[!hwe_violators,]
gt_add.mx <- gt_add.mx[!hwe_violators,]
gt_num.mx <- gt_num.mx[!hwe_violators,]
gt_chr.mx <- gt_chr.mx[!hwe_violators,]
alt_fraction.mx <- alt_fraction.mx[!hwe_violators,]
dp.mx <- dp.mx[!hwe_violators,]
gq.mx <- gq.mx[!hwe_violators,]
variants.df <- variants.df[!hwe_violators,]
# Clean-up
rm(hwe_violators)
# List objects
ls()
# Check sizes
dim(gt_add.mx)
# Chunk 1
options(width = 999)
# Chunk 2
# Time stamp
Sys.time()
# Clenan-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Files and folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_wo_danish_2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
setwd(scripts_folder)
# Libraries
library(dplyr)
library(HardyWeinberg)
# Chunk 3
load(file.path(data_folder,"s03_clean_variant_annotations.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_wo_danish_2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
# Chunk 4
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(alt_fraction.mx)
dim(gq.mx)
dim(dp.mx)
dim(variants.df)
dim(phenotypes.df)
# Check consistency of rownames and colnames
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(alt_fraction.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(alt_fraction.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
# Chunk 5
colnames(variants.df)
str(variants.df, list.len=ncol(variants.df))
# Chunk 6
explore_field.udf <- function(field, field_separator){
a <- strsplit(as.vector(field),paste("\\",field_separator,sep=""))
b <- as.vector(unlist(a))
sort(table(b), decreasing = TRUE)
}
# Chunk 7
explore_field.udf(variants.df$vep_Consequence, "&")
sort(table(variants.df$vep_IMPACT, useNA = "always"), decreasing=T)
# Chunk 8
hist(variants.df$InbreedingCoeff, ylim=c(0,10000), lab=T)
# Chunk 9
hist(variants.df$ExcessHet, ylim=c(0,12000), lab=T)
plot(-log10(variants.df$ExcessHet), main="- log10 ExcessHet", xlab="Variants")
# Chunk 10
hist(as.numeric(variants.df$MLEAF),ylim=c(0,12000), lab=T)
# Chunk 11
hist(variants.df$MQ,ylim=c(0,12000), lab=T)
# Chunk 12
table(variants.df$Multiallelic, useNA = "always")
# Chunk 13
table(variants.df$NEGATIVE_TRAIN_SITE, useNA = "always")
# Chunk 14
table(variants.df$POSITIVE_TRAIN_SITE, useNA = "always")
# Chunk 15
sort(table(variants.df$SIFT_call, useNA = "always"), decreasing=T)
sort(table(variants.df$PolyPhen_call, useNA = "always"), decreasing=T)
# Chunk 16
sort(table(variants.df$CLNSIG, useNA = "always"), decreasing=T)
explore_field.udf(variants.df$CLNSIG, ",")
# Chunk 17
sort(table(variants.df$CLNREVSTAT, useNA = "always"), decreasing=T)
explore_field.udf(variants.df$CLNREVSTAT, ",")
# Chunk 18
sort(table(variants.df$CLNDN, useNA = "always"), decreasing=T)[1:10]
explore_field.udf(variants.df$CLNDN, "|")
# Chunk 19
sum(is.na(variants.df$SYMBOL))
# Chunk 20
hist(as.numeric(variants.df$vep_DISTANCE), lab=T, ylim=c(0,32))
table(as.numeric(variants.df$vep_DISTANCE), useNA = "always")
# Chunk 21
table(variants.df$vep_STRAND, useNA = "always")
# Clean-up
rm(explore_field.udf)
# Chunk 22
# Prepare genotypes counts
genotypes_counts <- MakeCounts(t(gt_add.mx),coding=c(0,1,2))
dim(genotypes_counts)
genotypes_counts[1:5,]
# Calculate HWE p-values
hwe <- HWExactStats(genotypes_counts[,1:3], verbose=FALSE)
names(hwe) <- rownames(gt_add.mx)
# Remove HWE p from multiallelic variants
NA -> hwe[variants.df$Multiallelic]
sum(is.na(hwe))
# Explore HWE p-values
length(hwe)
hwe[1:5]
min(hwe, na.rm=T)
max(hwe, na.rm=T)
# Histogram HWE p-values
hist(hwe)
# Dot-plot HWE p-values
plot(-log10(hwe), main="- log10 HWE", xlab="Variants")
abline(h=6, col="red", lty=2)
# Add hwe to variants.df
variants.df <- cbind(variants.df, hwe_biallelic=hwe)
colnames(variants.df)
# Clean-up
rm(genotypes_counts, hwe)
# Detect variants violating HWE
hwe_violators <- variants.df$hwe_biallelic < 1e-6 & !is.na(variants.df$hwe_biallelic)
sum(hwe_violators)
# Remove HWE violators
gt_add.mx <- gt_add.mx[!hwe_violators,]
gt_num.mx <- gt_num.mx[!hwe_violators,]
gt_chr.mx <- gt_chr.mx[!hwe_violators,]
alt_fraction.mx <- alt_fraction.mx[!hwe_violators,]
dp.mx <- dp.mx[!hwe_violators,]
gq.mx <- gq.mx[!hwe_violators,]
variants.df <- variants.df[!hwe_violators,]
# Clean-up
rm(hwe_violators)
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(alt_fraction.mx)
dim(gq.mx)
dim(dp.mx)
dim(variants.df)
dim(phenotypes.df)
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(alt_fraction.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(alt_fraction.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Folders on HPC
#base_folder <- "/rds/project/erf33/rds-erf33-medgen" # hpc
#project_folder=file.path(base_folder,"users/alexey/wecare/reanalysis_wo_danish_2020") # hpc
# Folders on MAC
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
#dir.create(data_folder)
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
setwd(scripts_folder)
load(file.path(base_folder,"data","s04_select_samples","s05_remove_nfe.RData"))
# Update folders
#base_folder <- "/rds/project/erf33/rds-erf33-medgen" # hpc
#project_folder=file.path(base_folder,"users/alexey/wecare/reanalysis_wo_danish_2020") # hpc
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(ad.mx)
dim(ref.mx)
dim(alt.mx)
dim(gq.mx)
dim(dp.mx)
dim(variants.df)
colnames(variants.df)
dim(meta.df)
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(ad.mx))
sum(rownames(gt_add.mx) != rownames(ref.mx))
sum(rownames(gt_add.mx) != rownames(alt.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(ref.mx))
sum(colnames(gt_add.mx) != colnames(alt.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
# Calculate Alt Fraction matrix
sum.mx <- ref.mx + alt.mx
alt_fraction.mx <- alt.mx / sum.mx
alt_fraction.mx[1:5,1:5]
# NaN is placed in 0/0
sum(is.na(alt_fraction.mx))
sum(is.nan(alt_fraction.mx))
sum(ad.mx == "0,0")
# Put NA instead of NaN (just in case)
NA -> alt_fraction.mx[is.nan(alt_fraction.mx)]
sum(is.na(alt_fraction.mx))
sum(is.nan(alt_fraction.mx))
# Note: sum.mx is not always equal to dp.mx
sum(sum.mx != dp.mx, na.rm=T)/(nrow(dp.mx)*ncol(dp.mx))
# Clean-up
rm(sum.mx, ad.mx, ref.mx, alt.mx)
rm(meta.df, alt.mx, ref.mx, ad.mx, sum.mx)
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(alt_fraction.mx)
table(phenotypes.df$cc, useNA = "always")
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(alt_fraction.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(alt_fraction.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
dir.create(data_folder)
save.image(file.path(data_folder,"s01_update_genotypes.RData"))
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
setwd(scripts_folder)
load(file.path(data_folder,"s01_update_genotypes.RData"))
# Update folders (just in case)
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(alt_fraction.mx)
dim(gq.mx)
dim(dp.mx)
dim(variants.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(alt_fraction.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(alt_fraction.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
str(phenotypes.df)
# Check presence of NA-s
sum(is.na(phenotypes.df))
# Other possible missed value codes
sum(phenotypes.df=="",na.rm=T)
sum(phenotypes.df==".",na.rm=T)
# Time stamp
Sys.time()
# Clenan-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
setwd(scripts_folder)
# Libraries
library(dplyr)
load(file.path(data_folder,"s01_update_genotypes.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(alt_fraction.mx)
dim(gq.mx)
dim(dp.mx)
dim(variants.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(alt_fraction.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(alt_fraction.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
# Explore
colnames(variants.df)
str(variants.df, list.len=ncol(variants.df))
# No dots and empty strings for NA (done after reading VCF to R)
sum(variants.df==".", na.rm=T)
sum(variants.df=="", na.rm=T)
# Function to detect empty vectors
all_na.udf <- function(x){all(is.na(x))}
#Detect empty annotations
empty_fields <- apply(variants.df, 2, all_na.udf)
sum(empty_fields)
colnames(variants.df)[empty_fields]
# Remove empty annotations
# VQSLOD and culprit are empty because allele-specific GATK functions were used
variants.df <- variants.df[,!empty_fields]
dim(variants.df)
# Clean-up
rm(all_na.udf, empty_fields)
# Function to detect uniform vector of an arbitrary datatype
# (assuming no empty and all-NA vectors)
uniform_vector.udf <- function(x)(length(table(x))==1)
# Dtect niform fields
uniform_fields <- apply(variants.df, 2, uniform_vector.udf)
sum(uniform_fields)
colnames(variants.df)[uniform_fields]
# Explore content of uniform fields
variants.df[1:5,uniform_fields]
table(variants.df[,"CLNDNINCL"])
table(variants.df[,"CLNDISDBINCL"])
table(variants.df[,"CLNSIGINCL"])
table(variants.df[,"vep_GENE_PHENO"])
table(variants.df[,"vep_PHENO"])
# Why is this field non-uniform?
summary(as.factor(variants.df$vep_SYMBOL_SOURCE))
colnames(variants.df)[uniform_fields]
# Remove unifirm fields
variants.df <- variants.df[,!uniform_fields]
# Check result
dim(variants.df)
variants.df[1:5,1:5] # Rownames are preserved
# Clean up
rm(uniform_vector.udf, uniform_fields)
# Time stamp
Sys.time()
# Clenan-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Files and folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
setwd(scripts_folder)
# Libraries
library(dplyr)
library(HardyWeinberg)
# Time stamp
Sys.time()
# Clenan-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Files and folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
setwd(scripts_folder)
# Libraries
library(dplyr)
library(HardyWeinberg)
load(file.path(data_folder,"s03_clean_variant_annotations.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s05_update and_cleaning")
scripts_folder <- file.path(base_folder,"scripts","s05_update and_cleaning")
# List objects
ls()
# Check sizes
dim(gt_add.mx)
dim(gt_num.mx)
dim(gt_chr.mx)
dim(alt_fraction.mx)
dim(gq.mx)
dim(dp.mx)
dim(variants.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
sum(rownames(gt_add.mx) != rownames(gt_num.mx))
sum(rownames(gt_add.mx) != rownames(gt_chr.mx))
sum(rownames(gt_add.mx) != rownames(alt_fraction.mx))
sum(rownames(gt_add.mx) != rownames(gq.mx))
sum(rownames(gt_add.mx) != rownames(dp.mx))
sum(colnames(gt_add.mx) != colnames(gt_num.mx))
sum(colnames(gt_add.mx) != colnames(gt_chr.mx))
sum(colnames(gt_add.mx) != colnames(alt_fraction.mx))
sum(colnames(gt_add.mx) != colnames(gq.mx))
sum(colnames(gt_add.mx) != colnames(dp.mx))
sum(rownames(gt_add.mx) != rownames(variants.df))
sum(colnames(gt_add.mx) != rownames(phenotypes.df))
colnames(variants.df)
str(variants.df, list.len=ncol(variants.df))
explore_field.udf <- function(field, field_separator){
a <- strsplit(as.vector(field),paste("\\",field_separator,sep=""))
b <- as.vector(unlist(a))
sort(table(b), decreasing = TRUE)
}
explore_field.udf(variants.df$vep_Consequence, "&")
hist(variants.df$InbreedingCoeff, ylim=c(0,10000), lab=T)
hist(variants.df$ExcessHet, ylim=c(0,12000), lab=T)
plot(-log10(variants.df$ExcessHet), main="- log10 ExcessHet", xlab="Variants")
hist(as.numeric(variants.df$MLEAF),ylim=c(0,12000), lab=T)
hist(variants.df$MQ,ylim=c(0,12000), lab=T)
table(variants.df$Multiallelic, useNA = "always")
table(variants.df$NEGATIVE_TRAIN_SITE, useNA = "always")
table(variants.df$POSITIVE_TRAIN_SITE, useNA = "always")
sort(table(variants.df$SIFT_call, useNA = "always"), decreasing=T)
sort(table(variants.df$PolyPhen_call, useNA = "always"), decreasing=T)
sort(table(variants.df$CLNSIG, useNA = "always"), decreasing=T)
explore_field.udf(variants.df$CLNSIG, ",")
sort(table(variants.df$CLNREVSTAT, useNA = "always"), decreasing=T)
explore_field.udf(variants.df$CLNREVSTAT, ",")
(variants.df$CLNDN, useNA = "always"), decreasing=T)[1:10]
sort(table(variants.df$CLNDN, useNA = "always"), decreasing=T)[1:10]
explore_field.udf(variants.df$CLNDN, "|")
sum(is.na(variants.df$SYMBOL))
hist(as.numeric(variants.df$vep_DISTANCE), lab=T, ylim=c(0,32))
