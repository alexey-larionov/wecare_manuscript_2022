dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
dir.create(data_folder)
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
# Libraries
library(dplyr)
load(file.path(data_folder,"s01_crude_counts_per_variant.RData"))
# Update working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
bc11_genes <- scan(file.path(data_folder,"bc11_genes.txt"),what="character")
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
# Libraries
library(dplyr)
load(file.path(data_folder,"s01_crude_counts_per_variant.RData"))
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
# Libraries
library(dplyr)
load(file.path(data_folder,"s01_crude_counts_per_variant.RData"))
# Update working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
bc11_genes <- scan(file.path(data_folder,"bc11_genes.txt"),what="character")
ls()
# Check objects dimensions
dim(genotypes.mx)
dim(variants.df)
dim(phenotypes.df)
table(phenotypes.df, useNA = "always")
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
# Libraries
library(dplyr)
load(file.path(data_folder,"s01_crude_counts_per_variant.RData"))
# Update working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
bc11_genes <- scan(file.path(data_folder,"bc11_genes.txt"),what="character")
ls()
# Check objects dimensions
dim(genotypes.mx)
dim(variants.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
# Check list of genes
bc11_genes
bc9_variants.df <- variants.df[variants.df$vep_SYMBOL %in% bc11_genes,]
dim(bc9_variants.df)
table(bc9_variants.df$vep_SYMBOL)
rm(bc11_genes)
# Explore ClinVar annotations
bc9_variants.df %>%
group_by(CLNSIG) %>%
summarise(counts=n()) %>%
arrange(desc(counts))
# Select known_pathogenic variants
known_pathogenic <-
grepl("Pathogenic",bc9_variants.df$CLNSIG) |
grepl("Likely_pathogenic",bc9_variants.df$CLNSIG)
sum(known_pathogenic)
predicted_lof <- bc9_variants.df$vep_IMPACT == "HIGH"
sum(predicted_lof)
# Explore SIFT
bc9_variants.df %>%
group_by(SIFT_call) %>%
summarise(count=n()) %>%
arrange(desc(count))
# Explore PolyPhen
bc9_variants.df %>%
group_by(PolyPhen_call) %>%
summarise(count=n()) %>%
arrange(desc(count))
class(bc9_variants.df$vep_CADD_PHRED)
head(bc9_variants.df$vep_CADD_PHRED)
sum(is.na(bc9_variants.df$vep_CADD_PHRED))
# Check variants with missed CADD: all potentially relevant variants have HIGH impact,
# so they will be included under LoF category
bc9_variants.df[is.na(bc9_variants.df$vep_CADD_PHRED),
c("vep_SYMBOL","vep_VARIANT_CLASS","vep_IMPACT","vep_Consequence",
"vep_Existing_variation","CLNSIG","vep_gnomAD_NFE_AF","vep_CADD_PHRED")]
consensus_high_grade_missenses <-
bc9_variants.df$SIFT_call == "deleterious" & !is.na(bc9_variants.df$SIFT_call) &
bc9_variants.df$PolyPhen_call == "probably_damaging" & !is.na(bc9_variants.df$PolyPhen_call) &
bc9_variants.df$vep_CADD_PHRED >=25 & !is.na(bc9_variants.df$vep_CADD_PHRED)
sum(consensus_high_grade_missenses)
# Rare in the data-set
sum(bc9_variants.df$total_af <= 0.01, na.rm=T)
sum(bc9_variants.df$total_af >= 0.99, na.rm=T)
min(bc9_variants.df$total_af, na.rm=T)
max(bc9_variants.df$total_af, na.rm=T)
sum(is.na(bc9_variants.df$total_af))
# The single rare reference could be ignored because its benign
bc9_variants.df[bc9_variants.df$total_af >= 0.99 & !is.na(bc9_variants.df$total_af),
c("vep_SYMBOL","vep_VARIANT_CLASS","vep_IMPACT","vep_Consequence",
"vep_Existing_variation","CLNSIG","vep_gnomAD_AF","vep_gnomAD_NFE_AF",
"SIFT_call","PolyPhen_call","vep_CADD_PHRED")]
rare <- bc9_variants.df$total_af <= 0.01
sum(rare)
# Explore ClinVar annotations
bc9_variants.df %>%
group_by(CLNSIG) %>%
summarise(counts=n()) %>%
arrange(desc(counts))
# Known benign
known_benign <-
grepl("Benign",bc9_variants.df$CLNSIG) |
grepl("Likely_benign",bc9_variants.df$CLNSIG)
sum(known_benign)
# Functionally important variants
fiv <- (known_pathogenic | predicted_lof | consensus_high_grade_missenses) &
rare &
!(known_benign)
sum(fiv)
bc9_fiv.df <- bc9_variants.df[fiv,] %>%
select(ID,vep_SYMBOL,vep_Consequence,vep_IMPACT,CLNSIG,CLNREVSTAT,
PolyPhen_call,SIFT_call,vep_CADD_PHRED,
vep_gnomAD_NFE_AF,
total_ac,total_an,total_af,
controls_ac,controls_an,controls_af,
cases_ac,cases_an,cases_af)
bc9_fiv.df
write.table(bc9_fiv.df,
file=file.path(data_folder,"bc9_fiv_ampliseq_wecare_only.txt"),
quote=F, sep="\t",row.names = F, col.names = T)
# Clean-up
rm(predicted_lof,known_pathogenic,rare,fiv,consensus_high_grade_missenses,known_benign)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
ls()
# Check objects dimensions
dim(bc9_variants.df)
dim(bc9_fiv.df)
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
# Libraries
library(dplyr)
load(file.path(data_folder,"s02_select_bc9_pv.RData"))
# Update working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
# Time stamp
Sys.time()
# Clean-up
rm(list=ls())
graphics.off()
# Memory
gc()
# Options
options(stringsAsFactors = F,
warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
# Libraries
library(dplyr)
load(file.path(data_folder,"s02_select_bc9_pv.RData"))
# Update working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s08_crude_counts")
scripts_folder <- file.path(base_folder,"scripts","s08_crude_counts")
ls()
# Check objects dimensions
dim(bc9_variants.df)
dim(bc9_fiv.df)
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
total_ac <- sum(bc9_fiv.df$total_ac)
total_an <- sum(bc9_fiv.df$total_an)
mean_an <- total_an / nrow(bc9_fiv.df)
mean_af <- total_ac / total_an
aggregated_af <- total_ac / mean_an
mean_af
aggregated_af
rm(total_ac,total_an,mean_an,mean_af,aggregated_af)
controls_ac <- sum(bc9_fiv.df$controls_ac)
controls_total_an <- sum(bc9_fiv.df$controls_an)
controls_mean_an <- controls_total_an / nrow(bc9_fiv.df)
controls_mean_af <- controls_ac / controls_total_an
controls_aggregated_af <- controls_ac / controls_mean_an
rm(controls_mean_an)
cases_ac <- sum(bc9_fiv.df$cases_ac)
cases_total_an <- sum(bc9_fiv.df$cases_an)
cases_mean_an <- cases_total_an / nrow(bc9_fiv.df)
cases_mean_af <- cases_ac / cases_total_an
cases_aggregated_af <- cases_ac / cases_mean_an
rm(cases_mean_an)
fisher_matrix <- matrix(c(cases_ac, cases_total_an - cases_ac,
controls_ac, controls_total_an - controls_ac),
nrow=2, byrow=T)
colnames(fisher_matrix) <- c("Alt","Ref")
rownames(fisher_matrix) <- c("Cases","Controls") # CBC, UBC
fisher_matrix
ft <- fisher.test(fisher_matrix, conf.int=T)
ft
rm(cases_ac,cases_total_an,controls_ac,controls_total_an,fisher_matrix)
# Prepare data for plot
afs <- c(controls_mean_af,cases_mean_af)
names(afs) <- c("UBC","CBC")
cc_counts <- table(phenotypes.df$cc)
# Barplot (keep mid-positions of bars)
mp <- barplot(afs, ylim=c(0,max(afs)+0.0005),
main=paste("BC11: WES WECARE-only\n",
cc_counts[1],"controls vs ",cc_counts[2],
" cases\nCrude counts Fisher p=",round(ft$p.value,3)),
ylab="Mean AF in selected variants")
# Add labels to plot
text(mp,afs+0.0002,round(afs,4))
# Clean-up
rm(controls_mean_af, cases_mean_af,
afs, mp, cc_counts, ft)
# Prepare data for plot
afs <- c(controls_aggregated_af,cases_aggregated_af)
names(afs) <- c("UBC","CBC")
# Barplot (keep mid-positions of bars)
mp <- barplot(afs, ylim=c(0,max(afs)+0.005),
main=paste("Aggregated AF"),
ylab="Aggregated AF")
# Add labels to plot
text(mp,afs+0.003,round(afs,3))
# Clean-up
rm(controls_aggregated_af, cases_aggregated_af,afs, mp)
ls()
# Check objects dimensions
dim(bc9_variants.df)
dim(bc9_fiv.df)
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_afterNov2021","ampliseq","s01_ampliseq_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
# Libraries
library(dplyr)
load(file.path(data_folder,"s03_allele_counts_bc9.RData"))
# Update working folders
base_folder <- "/Users/alexey/Documents"
project_folder <- file.path(base_folder,"wecare","final_analysis_2021","reanalysis_afterNov2021","ampliseq","s01_ampliseq_wecare_only")
scripts_folder <- file.path(project_folder,"scripts","s08_crude_counts")
setwd(scripts_folder)
data_folder <- file.path(project_folder,"data","s08_crude_counts")
ls()
# Check objects dimentions
dim(genotypes.mx)
dim(variants.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
dim(bc9_variants.df)
dim(bc9_fiv.df)
# Check that the tables and matrices are in sync
sum(phenotypes.df$wes_id != colnames(genotypes.mx))
sum(variants.df$ID != rownames(genotypes.mx))
genotypes_bc9.mx <- genotypes.mx[bc9_fiv.df$ID,]
dim(genotypes_bc9.mx)
carriers_ids.udf <- function(x){paste(names(x)[which(x>0)], collapse=",")}
apply(genotypes_bc9.mx,1,carriers_ids.udf)
carriers_counts.udf <- function(x){sum(x>0, na.rm=T)}
carriers_counts <- apply(genotypes_bc9.mx,1,carriers_counts.udf)
carriers_counts
sum(carriers_counts)
sum(carriers_counts)/ncol(genotypes.mx)
rm(carriers_ids.udf, carriers_counts.udf, carriers_counts)
table(phenotypes.df$cc)
table(phenotypes.df$cc, useNA = "always")
controls <- phenotypes.df$cc == 0
cases <- phenotypes.df$cc == 1
bc9_fiv <- bc9_fiv.df$ID
gt_fiv_controls.mx <- genotypes.mx[bc9_fiv,controls]
dim(gt_fiv_controls.mx)
controls_carriers <- apply(gt_fiv_controls.mx,2,sum,na.rm=T)
table(controls_carriers,useNA = "always")
controls_carriers_count <- sum(controls_carriers>0)
controls_total_count <- sum(controls) # sum(), NOT length() !
controls_carriers_fraction <- controls_carriers_count / controls_total_count
rm(gt_fiv_controls.mx,controls_carriers,controls)
gt_fiv_cases.mx <- genotypes.mx[bc9_fiv,cases]
dim(gt_fiv_cases.mx)
cases_carriers <- apply(gt_fiv_cases.mx,2,sum,na.rm=T)
table(cases_carriers,useNA = "always")
cases_carriers_count <- sum(cases_carriers>0)
cases_total_count <- sum(cases) # sum(), NOT length !
cases_carriers_fraction <- cases_carriers_count / cases_total_count
rm(gt_fiv_cases.mx,cases_carriers,bc9_fiv,cases)
fisher_matrix <- matrix(c(cases_carriers_count, cases_total_count - cases_carriers_count,
controls_carriers_count, controls_total_count - controls_carriers_count),
nrow=2, byrow=T)
colnames(fisher_matrix) <- c("Alt","Ref")
rownames(fisher_matrix) <- c("Cases","Controls")
fisher_matrix
ft <- fisher.test(fisher_matrix, conf.int=T)
ft
rm(fisher_matrix)
pt <- prop.test(c(controls_carriers_count,cases_carriers_count),
c(controls_total_count,cases_total_count))
pt
# Prepare data for plot
proportions_of_carriers <- c(controls_carriers_fraction,cases_carriers_fraction)
names(proportions_of_carriers) <- c("UBC","CBC")
cc_counts <- table(phenotypes.df$cc)
# Barplot (keep mid-positions of bars)
mp <- barplot(proportions_of_carriers, ylim=c(0,max(proportions_of_carriers)+0.015),
main=paste("Proportion of PV carriers"),
ylab="Proportion of PV carriers")
# Add labels to plot
text(mp,proportions_of_carriers+0.007,round(proportions_of_carriers,3))
# Clean-up
rm(controls_carriers_count, controls_total_count, controls_carriers_fraction,
cases_carriers_count, cases_total_count, cases_carriers_fraction,
proportions_of_carriers, mp, cc_counts,
pt,ft)
# Time
Sys.time()
# Memory
gc()
# Clean up
rm(list=ls())
graphics.off()
# Options
options(stringsAsFactors = F)
# Working folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s09_skat")
#dir.create(data_folder)
scripts_folder <- file.path(base_folder,"scripts","s09_skat")
setwd(scripts_folder)
# Libraries
library(SKAT)
library(dplyr)
load(file.path(base_folder,"data","s08_crude_counts","s03_crude_counts_bc9.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s09_skat")
scripts_folder <- file.path(base_folder,"scripts","s09_skat")
load(file.path(base_folder,"data","s08_crude_counts","s03_allele_counts_bc9.RData"))
# Update folders
base_folder="/Users/alexey/Documents/wecare/final_analysis_2021/reanalysis_afterNov2021/ampliseq/s01_ampliseq_wecare_only"
data_folder <- file.path(base_folder,"data","s09_skat")
scripts_folder <- file.path(base_folder,"scripts","s09_skat")
ls()
dim(genotypes.mx)
dim(variants.df)
dim(phenotypes.df)
table(phenotypes.df$cc, useNA = "always")
# Check consistency of rownames and colnames
sum(colnames(genotypes.mx) != phenotypes.df$sample.ID)
sum(rownames(genotypes.mx) != variants.df$ID)
dim(bc9_variants.df)
dim(bc9_fiv.df)
Y <- phenotypes.df$cc
length(Y)
sum(is.na(Y)) # 0
G <- t(genotypes.mx[bc9_fiv.df$ID,])
dim(G)
sum(is.na(G))
# Do NOT impute missed genotypes (they are handled by SKAT)
sum(is.na(G))/(ncol(G)*nrow(G)) # ~1.7%
E <- as.matrix(phenotypes.df[,c("pc1","pc2")])
dim(E)
sum(is.na(E)) # 0
M <- as.matrix(phenotypes.df[,c("sub_dx_age", "rstime")])
sum(is.na(M)) # 0
table(phenotypes.df$hormone_self_mra, useNA = "always")
hormone <- phenotypes.df$hormone_self_mra
table(hormone, useNA = "always")
table(phenotypes.df$chemo_self_mra, useNA = "always")
chemo <- phenotypes.df$chemo_self_mra
table(chemo, useNA = "always")
table(phenotypes.df$xrtbreast, useNA = "always")
xray <- phenotypes.df$xrtbreast
table(xray, useNA = "always")
table(phenotypes.df$Num_ftp_fd, useNA = "always")
num_preg <- as.integer(phenotypes.df$Num_ftp_fd)
0 -> num_preg[as.integer(phenotypes.df$Num_ftp_fd) <= 0] # -1,0
1 -> num_preg[as.integer(phenotypes.df$Num_ftp_fd) %in% c(1,2)] # 1,2
2 -> num_preg[as.integer(phenotypes.df$Num_ftp_fd) >= 3] # 3+
table(num_preg)
C <- cbind(chemo, hormone, xray, num_preg)
sum(is.na(C)) # 0
# Clean-up
rm(chemo, hormone, xray, num_preg)
skat_null <- SKAT_Null_Model(Y ~ C + E + M, out_type="D", n.Resampling = 10000)
burden_test <- SKATBinary(G, skat_null, method="Burden", method.bin = "ER")
burden_test$p.value
burden_test$MAC
names(burden_test)
# Clean-up
rm(Y, G, E, C, M, skat_null)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
# Check consistency of rownames and colnames
sum(colnames(genotypes.mx) != phenotypes.df$sample.ID)
sum(rownames(genotypes.mx) != variants.df$ID)
dim(bc9_variants.df)
dim(bc9_fiv.df)
table(phenotypes.df$cc, useNA = "always")
dir.create(data_folder)
